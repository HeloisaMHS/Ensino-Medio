/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import classes.*;
import bd.*;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;

/**
 *
 * @author Maria Heloisa Souza
 */
public class PainelAdministrador extends javax.swing.JFrame {

    /**
     * Creates new form Cadastro
     */
    int indiceAtualAlteraCurso = -1;
    ArrayList<Curso> listaCursos;
    int indiceAtualAlteraArea = -1;
    ArrayList<Area> listaArea;
    int indiceAtualAlteraPergunta = -1;
    ArrayList<Pergunta> listaPergunta;
    int indiceAtualAlteraPerguntaE1 = -1;
    ArrayList<Pergunta> listaPerguntaE1;

    public void Adm(String adm) {
        jlNome4.setText("Bem Vindo " + adm);
        jlNome3.setText("Bem Vindo " + adm);
        jlNome12.setText("Bem Vindo " + adm);
        jlNome28.setText("Bem Vindo " + adm);
    }

    public PainelAdministrador() {
        initComponents();
        Color vinho = new Color(66, 0, 0);
        this.getContentPane().setBackground(Color.white);
        this.setLocationRelativeTo(null);
        p1.setVisible(false);
        p2.setVisible(false);
        p3.setVisible(false);
        p4.setVisible(false);
        p5.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbInserePergunta = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jbAlterar = new javax.swing.JButton();
        jbRemover = new javax.swing.JButton();
        jbSair = new javax.swing.JButton();
        jbInserir = new javax.swing.JButton();
        jbCad = new javax.swing.JButton();
        p5 = new javax.swing.JPanel();
        jlNome4 = new javax.swing.JLabel();
        p4 = new javax.swing.JPanel();
        painel4 = new javax.swing.JPanel();
        imgCad4 = new javax.swing.JLabel();
        jlCad4 = new javax.swing.JLabel();
        jlNome7 = new javax.swing.JLabel();
        jtNome4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jpSenha4 = new javax.swing.JPasswordField();
        jbCancelar4 = new javax.swing.JButton();
        jbCadastrar4 = new javax.swing.JButton();
        p3 = new javax.swing.JPanel();
        jlNome3 = new javax.swing.JLabel();
        jbCursoI = new javax.swing.JButton();
        jbAreaI = new javax.swing.JButton();
        jbPerguntaI = new javax.swing.JButton();
        jbPergunta1I = new javax.swing.JButton();
        jlT3 = new javax.swing.JLabel();
        jScrollPaneIC = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jlEnsino2 = new javax.swing.JLabel();
        jlSobreCurso4 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        taSobreCursoI = new javax.swing.JTextArea();
        jlSisu2 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        taCurrricularI = new javax.swing.JTextArea();
        jlGrade = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        taSisuI = new javax.swing.JTextArea();
        jlAreaA = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        taAreaAI = new javax.swing.JTextArea();
        jlSisu3 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        taPontosPI = new javax.swing.JTextArea();
        jlSobreCurso5 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        taPontosNI = new javax.swing.JTextArea();
        jlSobreCurso6 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        taPerfilPI = new javax.swing.JTextArea();
        jlSisu4 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        taMercadoI = new javax.swing.JTextArea();
        jScrollPane16 = new javax.swing.JScrollPane();
        taSalarioI = new javax.swing.JTextArea();
        jlSobreCurso7 = new javax.swing.JLabel();
        jlArea = new javax.swing.JLabel();
        jtNomeCursoI = new javax.swing.JTextField();
        jtAreaCursoI = new javax.swing.JTextField();
        jtCodCursoI = new javax.swing.JTextField();
        jlArea1 = new javax.swing.JLabel();
        jbInsereCurso = new javax.swing.JButton();
        jPanelIA = new javax.swing.JPanel();
        jlNome = new javax.swing.JLabel();
        jtCodAreaI = new javax.swing.JTextField();
        jlNome5 = new javax.swing.JLabel();
        jtNomeAreaI = new javax.swing.JTextField();
        jbInsereArea = new javax.swing.JButton();
        jPanelIP = new javax.swing.JPanel();
        jlNome6 = new javax.swing.JLabel();
        jtLinkEtapaI = new javax.swing.JTextField();
        jlNome8 = new javax.swing.JLabel();
        jtCodPerI = new javax.swing.JTextField();
        jlNome9 = new javax.swing.JLabel();
        jlNome10 = new javax.swing.JLabel();
        jlNome11 = new javax.swing.JLabel();
        jtLinkAreaI = new javax.swing.JTextField();
        jtLinkCursoI = new javax.swing.JTextField();
        taDescricao = new javax.swing.JScrollPane();
        taDescriI = new javax.swing.JTextArea();
        jbInserePer = new javax.swing.JButton();
        jPanelIP1 = new javax.swing.JPanel();
        jtLinkEtapa1I = new javax.swing.JTextField();
        jlNome13 = new javax.swing.JLabel();
        jtCodPer1I = new javax.swing.JTextField();
        jlNome14 = new javax.swing.JLabel();
        jlNome15 = new javax.swing.JLabel();
        jlNome16 = new javax.swing.JLabel();
        jtLinkArea1I = new javax.swing.JTextField();
        taDescricao1 = new javax.swing.JScrollPane();
        taDescri1I = new javax.swing.JTextArea();
        jbInserePer1 = new javax.swing.JButton();
        p2 = new javax.swing.JPanel();
        jlNome12 = new javax.swing.JLabel();
        jbCursoA = new javax.swing.JButton();
        jbAreaA = new javax.swing.JButton();
        jbPergunta1A = new javax.swing.JButton();
        jbPerguntaA = new javax.swing.JButton();
        jlT4 = new javax.swing.JLabel();
        jScrollPaneAC = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jlEnsino3 = new javax.swing.JLabel();
        jlSobreCurso8 = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        taSobreCursoA = new javax.swing.JTextArea();
        jlSisu5 = new javax.swing.JLabel();
        jScrollPane18 = new javax.swing.JScrollPane();
        taCurrricularA = new javax.swing.JTextArea();
        jlGrade1 = new javax.swing.JLabel();
        jScrollPane19 = new javax.swing.JScrollPane();
        taSisuA = new javax.swing.JTextArea();
        jlAreaA1 = new javax.swing.JLabel();
        jScrollPane20 = new javax.swing.JScrollPane();
        taAreaAA = new javax.swing.JTextArea();
        jlSisu6 = new javax.swing.JLabel();
        jScrollPane21 = new javax.swing.JScrollPane();
        taPontosPA = new javax.swing.JTextArea();
        jlSobreCurso9 = new javax.swing.JLabel();
        jScrollPane22 = new javax.swing.JScrollPane();
        taPontosNA = new javax.swing.JTextArea();
        jlSobreCurso10 = new javax.swing.JLabel();
        jScrollPane23 = new javax.swing.JScrollPane();
        taPerfilPA = new javax.swing.JTextArea();
        jlSisu7 = new javax.swing.JLabel();
        jScrollPane24 = new javax.swing.JScrollPane();
        taMercadoA = new javax.swing.JTextArea();
        jScrollPane25 = new javax.swing.JScrollPane();
        taSalarioA = new javax.swing.JTextArea();
        jlSobreCurso11 = new javax.swing.JLabel();
        jlArea2 = new javax.swing.JLabel();
        jtNomeCursoA = new javax.swing.JTextField();
        jtAreaCursoA = new javax.swing.JTextField();
        jtCodCursoA = new javax.swing.JTextField();
        jlArea3 = new javax.swing.JLabel();
        jbAnteriorCA = new javax.swing.JButton();
        jbProximoCA = new javax.swing.JButton();
        jbAlteraC = new javax.swing.JButton();
        jPanelAA = new javax.swing.JPanel();
        jlNome17 = new javax.swing.JLabel();
        jtCodAreaA = new javax.swing.JTextField();
        jlNome18 = new javax.swing.JLabel();
        jtNomeAreaA = new javax.swing.JTextField();
        jbProximoA = new javax.swing.JButton();
        jbAnteriorA = new javax.swing.JButton();
        jbAlteraArea = new javax.swing.JButton();
        jPanelAP = new javax.swing.JPanel();
        jlNome19 = new javax.swing.JLabel();
        jtLinkEtapaA = new javax.swing.JTextField();
        jlNome20 = new javax.swing.JLabel();
        jtCodPerA = new javax.swing.JTextField();
        jlNome21 = new javax.swing.JLabel();
        jlNome22 = new javax.swing.JLabel();
        jlNome23 = new javax.swing.JLabel();
        jtLinkAreaA = new javax.swing.JTextField();
        jtLinkCursoA = new javax.swing.JTextField();
        taDescricao2 = new javax.swing.JScrollPane();
        taDescriA = new javax.swing.JTextArea();
        jbAnteriorP = new javax.swing.JButton();
        jbProximoP = new javax.swing.JButton();
        jbAlterarP = new javax.swing.JButton();
        jPanelAP1 = new javax.swing.JPanel();
        jtLinkEtapa1A = new javax.swing.JTextField();
        jlNome24 = new javax.swing.JLabel();
        jtCodPer1A = new javax.swing.JTextField();
        jlNome25 = new javax.swing.JLabel();
        jlNome26 = new javax.swing.JLabel();
        jlNome27 = new javax.swing.JLabel();
        jtLinkArea1A = new javax.swing.JTextField();
        taDescricao3 = new javax.swing.JScrollPane();
        taDescri1A = new javax.swing.JTextArea();
        jbAlteraP1 = new javax.swing.JButton();
        jbAnteriorP1 = new javax.swing.JButton();
        jbProximoP1 = new javax.swing.JButton();
        p1 = new javax.swing.JPanel();
        jlNome28 = new javax.swing.JLabel();
        jbCursoR = new javax.swing.JButton();
        jbAreaR = new javax.swing.JButton();
        jbPergunta1R = new javax.swing.JButton();
        jbPerguntaR = new javax.swing.JButton();
        jlT5 = new javax.swing.JLabel();
        jScrollPaneRC = new javax.swing.JScrollPane();
        jPanel10 = new javax.swing.JPanel();
        jlEnsino4 = new javax.swing.JLabel();
        jlSobreCurso12 = new javax.swing.JLabel();
        jScrollPane26 = new javax.swing.JScrollPane();
        taSobreCursoR = new javax.swing.JTextArea();
        jlSisu8 = new javax.swing.JLabel();
        jScrollPane27 = new javax.swing.JScrollPane();
        taCurrricularR = new javax.swing.JTextArea();
        jlGrade2 = new javax.swing.JLabel();
        jScrollPane28 = new javax.swing.JScrollPane();
        taSisuR = new javax.swing.JTextArea();
        jlAreaA2 = new javax.swing.JLabel();
        jScrollPane29 = new javax.swing.JScrollPane();
        taAreaAR = new javax.swing.JTextArea();
        jlSisu9 = new javax.swing.JLabel();
        jScrollPane30 = new javax.swing.JScrollPane();
        taPontosPR = new javax.swing.JTextArea();
        jlSobreCurso13 = new javax.swing.JLabel();
        jScrollPane31 = new javax.swing.JScrollPane();
        taPontosNR = new javax.swing.JTextArea();
        jlSobreCurso14 = new javax.swing.JLabel();
        jScrollPane32 = new javax.swing.JScrollPane();
        taPerfilPR = new javax.swing.JTextArea();
        jlSisu10 = new javax.swing.JLabel();
        jScrollPane33 = new javax.swing.JScrollPane();
        taMercadoR = new javax.swing.JTextArea();
        jScrollPane34 = new javax.swing.JScrollPane();
        taSalarioR = new javax.swing.JTextArea();
        jlSobreCurso15 = new javax.swing.JLabel();
        jlArea4 = new javax.swing.JLabel();
        jtNomeCursoR = new javax.swing.JTextField();
        jtAreaCursoR = new javax.swing.JTextField();
        jtCodCursoR = new javax.swing.JTextField();
        jlArea5 = new javax.swing.JLabel();
        jbRemoverCurso = new javax.swing.JButton();
        jbAnteriorRC = new javax.swing.JButton();
        jbProximoRC = new javax.swing.JButton();
        jPanelRA = new javax.swing.JPanel();
        jlNome1 = new javax.swing.JLabel();
        jtCodAreaR = new javax.swing.JTextField();
        jlNome29 = new javax.swing.JLabel();
        jtNomeAreaR = new javax.swing.JTextField();
        jbRemoverArea = new javax.swing.JButton();
        jbAnteriorRA = new javax.swing.JButton();
        jbProximoRA = new javax.swing.JButton();
        jPanelRP = new javax.swing.JPanel();
        jlNome30 = new javax.swing.JLabel();
        jtLinkEtapaR = new javax.swing.JTextField();
        jlNome31 = new javax.swing.JLabel();
        jtCodPerR = new javax.swing.JTextField();
        jlNome32 = new javax.swing.JLabel();
        jlNome33 = new javax.swing.JLabel();
        jlNome34 = new javax.swing.JLabel();
        jtLinkAreaR = new javax.swing.JTextField();
        jtLinkCursoR = new javax.swing.JTextField();
        taDescricao4 = new javax.swing.JScrollPane();
        taDescriR = new javax.swing.JTextArea();
        jbProximoPerR = new javax.swing.JButton();
        jbRemoverPerR = new javax.swing.JButton();
        jbAnteriorPerR = new javax.swing.JButton();
        jPanelRP1 = new javax.swing.JPanel();
        jtLinkEtapa1R = new javax.swing.JTextField();
        jlNome35 = new javax.swing.JLabel();
        jtCodPer1R = new javax.swing.JTextField();
        jlNome36 = new javax.swing.JLabel();
        jlNome37 = new javax.swing.JLabel();
        jlNome38 = new javax.swing.JLabel();
        jtLinkArea1R = new javax.swing.JTextField();
        taDescricao5 = new javax.swing.JScrollPane();
        taDescri1R = new javax.swing.JTextArea();
        jbRemoverPer1 = new javax.swing.JButton();
        jbAnteriorPer1 = new javax.swing.JButton();
        jbProximoPer1 = new javax.swing.JButton();

        jbInserePergunta.setBackground(new java.awt.Color(153, 102, 51));
        jbInserePergunta.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbInserePergunta.setForeground(new java.awt.Color(255, 255, 255));
        jbInserePergunta.setText("Inserir");
        jbInserePergunta.setToolTipText("");
        jbInserePergunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInserePerguntaActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administrador");
        setBackground(new java.awt.Color(66, 0, 0));
        setMinimumSize(new java.awt.Dimension(910, 519));
        setPreferredSize(new java.awt.Dimension(910, 519));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setEnabled(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbAlterar.setBackground(new java.awt.Color(66, 0, 0));
        jbAlterar.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jbAlterar.setForeground(new java.awt.Color(255, 255, 255));
        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });
        jPanel1.add(jbAlterar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 195, 71));

        jbRemover.setBackground(new java.awt.Color(66, 0, 0));
        jbRemover.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jbRemover.setForeground(new java.awt.Color(255, 255, 255));
        jbRemover.setText("Remover");
        jbRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverActionPerformed(evt);
            }
        });
        jPanel1.add(jbRemover, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 195, 71));

        jbSair.setBackground(new java.awt.Color(66, 0, 0));
        jbSair.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jbSair.setForeground(new java.awt.Color(255, 255, 255));
        jbSair.setText("Sair");
        jbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSairActionPerformed(evt);
            }
        });
        jPanel1.add(jbSair, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 410, 81, -1));

        jbInserir.setBackground(new java.awt.Color(66, 0, 0));
        jbInserir.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jbInserir.setForeground(new java.awt.Color(255, 255, 255));
        jbInserir.setText("Inserir");
        jbInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInserirActionPerformed(evt);
            }
        });
        jPanel1.add(jbInserir, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 195, 71));

        jbCad.setBackground(new java.awt.Color(66, 0, 0));
        jbCad.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jbCad.setForeground(new java.awt.Color(255, 255, 255));
        jbCad.setText("<html><center>Cadastrar Psicólogo</center></html>");
        jbCad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadActionPerformed(evt);
            }
        });
        jPanel1.add(jbCad, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 190, 70));

        p5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlNome4.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jlNome4.setForeground(new java.awt.Color(66, 0, 0));
        jlNome4.setText("<html><center>Bem Vindo [Nome Administrador]</center></html>");
        p5.add(jlNome4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 530, 100));

        jPanel1.add(p5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 670, 460));

        p4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        painel4.setBackground(new java.awt.Color(255, 255, 255));
        painel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(77, 51, 25), 6));

        imgCad4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/icons8-usuário-100 (1).png"))); // NOI18N

        jlCad4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jlCad4.setForeground(new java.awt.Color(66, 0, 0));
        jlCad4.setText("Cadastro");

        jlNome7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome7.setForeground(new java.awt.Color(66, 0, 0));
        jlNome7.setText("Nome completo:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(66, 0, 0));
        jLabel5.setText("Senha: ");

        jpSenha4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpSenha4ActionPerformed(evt);
            }
        });

        jbCancelar4.setBackground(new java.awt.Color(153, 102, 51));
        jbCancelar4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbCancelar4.setForeground(new java.awt.Color(255, 255, 255));
        jbCancelar4.setLabel("Cancelar");
        jbCancelar4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelar4ActionPerformed(evt);
            }
        });

        jbCadastrar4.setBackground(new java.awt.Color(153, 102, 51));
        jbCadastrar4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbCadastrar4.setForeground(new java.awt.Color(255, 255, 255));
        jbCadastrar4.setText("Cadastrar");
        jbCadastrar4.setToolTipText("");
        jbCadastrar4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrar4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painel4Layout = new javax.swing.GroupLayout(painel4);
        painel4.setLayout(painel4Layout);
        painel4Layout.setHorizontalGroup(
            painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel4Layout.createSequentialGroup()
                .addGroup(painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel4Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(painel4Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jpSenha4, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painel4Layout.createSequentialGroup()
                                .addComponent(jlNome7)
                                .addGap(2, 2, 2)
                                .addGroup(painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtNome4, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addGroup(painel4Layout.createSequentialGroup()
                                        .addGroup(painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlCad4)
                                            .addComponent(imgCad4))
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(painel4Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jbCancelar4)
                        .addGap(18, 18, 18)
                        .addComponent(jbCadastrar4)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        painel4Layout.setVerticalGroup(
            painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgCad4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlCad4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtNome4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlNome7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jpSenha4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCancelar4)
                    .addComponent(jbCadastrar4))
                .addContainerGap())
        );

        p4.add(painel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 62, -1, -1));

        jPanel1.add(p4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 670, 460));

        p3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlNome3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome3.setForeground(new java.awt.Color(66, 0, 0));
        jlNome3.setText("Bem Vindo [Nome Administrador]");
        p3.add(jlNome3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 226, 34));

        jbCursoI.setBackground(new java.awt.Color(153, 102, 51));
        jbCursoI.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbCursoI.setForeground(new java.awt.Color(255, 255, 255));
        jbCursoI.setText("Curso ");
        jbCursoI.setToolTipText("");
        jbCursoI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCursoIActionPerformed(evt);
            }
        });
        p3.add(jbCursoI, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, -1, -1));

        jbAreaI.setBackground(new java.awt.Color(153, 102, 51));
        jbAreaI.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAreaI.setForeground(new java.awt.Color(255, 255, 255));
        jbAreaI.setText("Área do Conhecimento");
        jbAreaI.setToolTipText("");
        jbAreaI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAreaIActionPerformed(evt);
            }
        });
        p3.add(jbAreaI, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));

        jbPerguntaI.setBackground(new java.awt.Color(153, 102, 51));
        jbPerguntaI.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbPerguntaI.setForeground(new java.awt.Color(255, 255, 255));
        jbPerguntaI.setText("Pergunta etapa 1");
        jbPerguntaI.setToolTipText("");
        jbPerguntaI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPerguntaIActionPerformed(evt);
            }
        });
        p3.add(jbPerguntaI, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, -1, -1));

        jbPergunta1I.setBackground(new java.awt.Color(153, 102, 51));
        jbPergunta1I.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbPergunta1I.setForeground(new java.awt.Color(255, 255, 255));
        jbPergunta1I.setText("Pergunta");
        jbPergunta1I.setToolTipText("");
        jbPergunta1I.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPergunta1IActionPerformed(evt);
            }
        });
        p3.add(jbPergunta1I, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, -1, -1));

        jlT3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlT3.setForeground(new java.awt.Color(66, 0, 0));
        jlT3.setText("Selecione o que deseja inserir:");
        p3.add(jlT3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 190, 34));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlEnsino2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlEnsino2.setForeground(new java.awt.Color(66, 0, 0));
        jlEnsino2.setText("º Nome do curso");
        jPanel4.add(jlEnsino2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 61, -1, 20));

        jlSobreCurso4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSobreCurso4.setForeground(new java.awt.Color(66, 0, 0));
        jlSobreCurso4.setText("º Sobre o curso");
        jPanel4.add(jlSobreCurso4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 101, 28));

        taSobreCursoI.setColumns(20);
        taSobreCursoI.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taSobreCursoI.setForeground(new java.awt.Color(66, 0, 0));
        taSobreCursoI.setRows(5);
        jScrollPane8.setViewportView(taSobreCursoI);

        jPanel4.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 590, -1));

        jlSisu2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSisu2.setForeground(new java.awt.Color(66, 0, 0));
        jlSisu2.setText("º Nota de corte do SISU");
        jPanel4.add(jlSisu2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, 28));

        taCurrricularI.setColumns(20);
        taCurrricularI.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taCurrricularI.setForeground(new java.awt.Color(66, 0, 0));
        taCurrricularI.setRows(5);
        jScrollPane9.setViewportView(taCurrricularI);

        jPanel4.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 590, -1));

        jlGrade.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlGrade.setForeground(new java.awt.Color(66, 0, 0));
        jlGrade.setText("º Grade curricular");
        jPanel4.add(jlGrade, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, -1, 28));

        taSisuI.setColumns(20);
        taSisuI.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taSisuI.setForeground(new java.awt.Color(66, 0, 0));
        taSisuI.setRows(5);
        jScrollPane10.setViewportView(taSisuI);

        jPanel4.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 590, -1));

        jlAreaA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlAreaA.setForeground(new java.awt.Color(66, 0, 0));
        jlAreaA.setText("º Área de atuação ou especialização");
        jPanel4.add(jlAreaA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, -1, 28));

        taAreaAI.setColumns(20);
        taAreaAI.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taAreaAI.setForeground(new java.awt.Color(66, 0, 0));
        taAreaAI.setRows(5);
        jScrollPane11.setViewportView(taAreaAI);

        jPanel4.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 590, -1));

        jlSisu3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSisu3.setForeground(new java.awt.Color(66, 0, 0));
        jlSisu3.setText("º Pontos positivos");
        jPanel4.add(jlSisu3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 640, -1, 28));

        taPontosPI.setColumns(20);
        taPontosPI.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taPontosPI.setForeground(new java.awt.Color(66, 0, 0));
        taPontosPI.setRows(5);
        jScrollPane12.setViewportView(taPontosPI);

        jPanel4.add(jScrollPane12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 670, 590, -1));

        jlSobreCurso5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSobreCurso5.setForeground(new java.awt.Color(66, 0, 0));
        jlSobreCurso5.setText("º Pontos negativos");
        jPanel4.add(jlSobreCurso5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 770, -1, 28));

        taPontosNI.setColumns(20);
        taPontosNI.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taPontosNI.setForeground(new java.awt.Color(66, 0, 0));
        taPontosNI.setRows(5);
        taPontosNI.setToolTipText("");
        jScrollPane13.setViewportView(taPontosNI);

        jPanel4.add(jScrollPane13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 800, 590, -1));

        jlSobreCurso6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSobreCurso6.setForeground(new java.awt.Color(66, 0, 0));
        jlSobreCurso6.setText("º Perfil do profissional");
        jPanel4.add(jlSobreCurso6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 900, -1, 28));

        taPerfilPI.setColumns(20);
        taPerfilPI.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taPerfilPI.setForeground(new java.awt.Color(66, 0, 0));
        taPerfilPI.setRows(5);
        taPerfilPI.setToolTipText("");
        jScrollPane14.setViewportView(taPerfilPI);

        jPanel4.add(jScrollPane14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 930, 590, -1));

        jlSisu4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSisu4.setForeground(new java.awt.Color(66, 0, 0));
        jlSisu4.setText("º Mercado atual");
        jPanel4.add(jlSisu4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 1030, -1, 28));

        taMercadoI.setColumns(20);
        taMercadoI.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taMercadoI.setForeground(new java.awt.Color(66, 0, 0));
        taMercadoI.setRows(5);
        taMercadoI.setToolTipText("");
        jScrollPane15.setViewportView(taMercadoI);

        jPanel4.add(jScrollPane15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 1060, 590, -1));

        taSalarioI.setColumns(20);
        taSalarioI.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taSalarioI.setForeground(new java.awt.Color(66, 0, 0));
        taSalarioI.setRows(5);
        taSalarioI.setToolTipText("");
        jScrollPane16.setViewportView(taSalarioI);

        jPanel4.add(jScrollPane16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 1190, 590, -1));

        jlSobreCurso7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSobreCurso7.setForeground(new java.awt.Color(66, 0, 0));
        jlSobreCurso7.setText("º Salário");
        jPanel4.add(jlSobreCurso7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 1160, -1, 28));

        jlArea.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlArea.setForeground(new java.awt.Color(66, 0, 0));
        jlArea.setText("º Link área:");
        jPanel4.add(jlArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 101, 20));

        jtNomeCursoI.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtNomeCursoI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNomeCursoIActionPerformed(evt);
            }
        });
        jPanel4.add(jtNomeCursoI, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 133, -1));

        jtAreaCursoI.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel4.add(jtAreaCursoI, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 133, -1));

        jtCodCursoI.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtCodCursoI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCodCursoIActionPerformed(evt);
            }
        });
        jPanel4.add(jtCodCursoI, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 133, -1));

        jlArea1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlArea1.setForeground(new java.awt.Color(66, 0, 0));
        jlArea1.setText("º Código do curso");
        jPanel4.add(jlArea1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 101, 20));

        jbInsereCurso.setBackground(new java.awt.Color(153, 102, 51));
        jbInsereCurso.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbInsereCurso.setForeground(new java.awt.Color(255, 255, 255));
        jbInsereCurso.setText("Inserir");
        jbInsereCurso.setToolTipText("");
        jbInsereCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInsereCursoActionPerformed(evt);
            }
        });
        jPanel4.add(jbInsereCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 1300, -1, -1));

        jScrollPaneIC.setViewportView(jPanel4);

        p3.add(jScrollPaneIC, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 630, 260));

        jPanelIA.setBackground(new java.awt.Color(255, 255, 255));
        jPanelIA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlNome.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome.setForeground(new java.awt.Color(66, 0, 0));
        jlNome.setText("Código área:");
        jPanelIA.add(jlNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 80, 30));

        jtCodAreaI.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtCodAreaI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCodAreaIActionPerformed(evt);
            }
        });
        jPanelIA.add(jtCodAreaI, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 133, 31));

        jlNome5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome5.setForeground(new java.awt.Color(66, 0, 0));
        jlNome5.setText("Nome área:");
        jPanelIA.add(jlNome5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 80, 30));

        jtNomeAreaI.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtNomeAreaI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNomeAreaIActionPerformed(evt);
            }
        });
        jPanelIA.add(jtNomeAreaI, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 133, 31));

        jbInsereArea.setBackground(new java.awt.Color(153, 102, 51));
        jbInsereArea.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbInsereArea.setForeground(new java.awt.Color(255, 255, 255));
        jbInsereArea.setText("Inserir");
        jbInsereArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInsereAreaActionPerformed(evt);
            }
        });
        jPanelIA.add(jbInsereArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 190, -1, -1));

        p3.add(jPanelIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 610, 260));

        jPanelIP.setBackground(new java.awt.Color(255, 255, 255));
        jPanelIP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlNome6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome6.setForeground(new java.awt.Color(66, 0, 0));
        jlNome6.setText("Link curso:");
        jPanelIP.add(jlNome6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 80, 30));

        jtLinkEtapaI.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkEtapaI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkEtapaIActionPerformed(evt);
            }
        });
        jPanelIP.add(jtLinkEtapaI, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 160, -1));

        jlNome8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome8.setForeground(new java.awt.Color(66, 0, 0));
        jlNome8.setText("Descrição:");
        jPanelIP.add(jlNome8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 80, 30));

        jtCodPerI.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtCodPerI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCodPerIActionPerformed(evt);
            }
        });
        jPanelIP.add(jtCodPerI, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 133, -1));

        jlNome9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome9.setForeground(new java.awt.Color(66, 0, 0));
        jlNome9.setText("Código pergunta:");
        jPanelIP.add(jlNome9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 110, 30));

        jlNome10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome10.setForeground(new java.awt.Color(66, 0, 0));
        jlNome10.setText("Link área:");
        jPanelIP.add(jlNome10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 80, 30));

        jlNome11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome11.setForeground(new java.awt.Color(66, 0, 0));
        jlNome11.setText("Link etapa:");
        jPanelIP.add(jlNome11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 80, 30));

        jtLinkAreaI.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkAreaI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkAreaIActionPerformed(evt);
            }
        });
        jPanelIP.add(jtLinkAreaI, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 160, -1));

        jtLinkCursoI.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkCursoI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkCursoIActionPerformed(evt);
            }
        });
        jPanelIP.add(jtLinkCursoI, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 160, -1));

        taDescriI.setColumns(20);
        taDescriI.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        taDescriI.setRows(5);
        taDescricao.setViewportView(taDescriI);

        jPanelIP.add(taDescricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 460, -1));

        jbInserePer.setBackground(new java.awt.Color(153, 102, 51));
        jbInserePer.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbInserePer.setForeground(new java.awt.Color(255, 255, 255));
        jbInserePer.setText("Inserir");
        jbInserePer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInserePerActionPerformed(evt);
            }
        });
        jPanelIP.add(jbInserePer, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, -1, -1));

        p3.add(jPanelIP, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 610, 260));

        jPanelIP1.setBackground(new java.awt.Color(255, 255, 255));
        jPanelIP1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtLinkEtapa1I.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkEtapa1I.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkEtapa1IActionPerformed(evt);
            }
        });
        jPanelIP1.add(jtLinkEtapa1I, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 160, -1));

        jlNome13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome13.setForeground(new java.awt.Color(66, 0, 0));
        jlNome13.setText("<html><center>Descrição<br>etapa 1:</center></html>");
        jPanelIP1.add(jlNome13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 70, 40));

        jtCodPer1I.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtCodPer1I.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCodPer1IActionPerformed(evt);
            }
        });
        jPanelIP1.add(jtCodPer1I, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 133, -1));

        jlNome14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome14.setForeground(new java.awt.Color(66, 0, 0));
        jlNome14.setText("Código pergunta etapa 1:");
        jPanelIP1.add(jlNome14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 160, 30));

        jlNome15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome15.setForeground(new java.awt.Color(66, 0, 0));
        jlNome15.setText("Link área:");
        jPanelIP1.add(jlNome15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 80, 30));

        jlNome16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome16.setForeground(new java.awt.Color(66, 0, 0));
        jlNome16.setText("Link etapa:");
        jPanelIP1.add(jlNome16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 80, 30));

        jtLinkArea1I.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkArea1I.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkArea1IActionPerformed(evt);
            }
        });
        jPanelIP1.add(jtLinkArea1I, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 160, -1));

        taDescri1I.setColumns(20);
        taDescri1I.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        taDescri1I.setRows(5);
        taDescricao1.setViewportView(taDescri1I);

        jPanelIP1.add(taDescricao1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 460, -1));

        jbInserePer1.setBackground(new java.awt.Color(153, 102, 51));
        jbInserePer1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbInserePer1.setForeground(new java.awt.Color(255, 255, 255));
        jbInserePer1.setText("Inserir");
        jbInserePer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInserePer1ActionPerformed(evt);
            }
        });
        jPanelIP1.add(jbInserePer1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, -1, -1));

        p3.add(jPanelIP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 610, 260));

        jPanel1.add(p3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 670, 460));

        p2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlNome12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome12.setForeground(new java.awt.Color(66, 0, 0));
        jlNome12.setText("Bem Vindo [Nome Administrador]");
        p2.add(jlNome12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 226, 34));

        jbCursoA.setBackground(new java.awt.Color(153, 102, 51));
        jbCursoA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbCursoA.setForeground(new java.awt.Color(255, 255, 255));
        jbCursoA.setText("Curso ");
        jbCursoA.setToolTipText("");
        jbCursoA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCursoAActionPerformed(evt);
            }
        });
        p2.add(jbCursoA, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, -1, -1));

        jbAreaA.setBackground(new java.awt.Color(153, 102, 51));
        jbAreaA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAreaA.setForeground(new java.awt.Color(255, 255, 255));
        jbAreaA.setText("Área do Conhecimento");
        jbAreaA.setToolTipText("");
        jbAreaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAreaAActionPerformed(evt);
            }
        });
        p2.add(jbAreaA, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));

        jbPergunta1A.setBackground(new java.awt.Color(153, 102, 51));
        jbPergunta1A.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbPergunta1A.setForeground(new java.awt.Color(255, 255, 255));
        jbPergunta1A.setText("Pergunta etapa 1");
        jbPergunta1A.setToolTipText("");
        jbPergunta1A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPergunta1AActionPerformed(evt);
            }
        });
        p2.add(jbPergunta1A, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, -1, -1));

        jbPerguntaA.setBackground(new java.awt.Color(153, 102, 51));
        jbPerguntaA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbPerguntaA.setForeground(new java.awt.Color(255, 255, 255));
        jbPerguntaA.setText("Pergunta");
        jbPerguntaA.setToolTipText("");
        jbPerguntaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPerguntaAActionPerformed(evt);
            }
        });
        p2.add(jbPerguntaA, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, -1, -1));

        jlT4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlT4.setForeground(new java.awt.Color(66, 0, 0));
        jlT4.setText("Selecione o que deseja alterar:");
        p2.add(jlT4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 190, 34));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlEnsino3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlEnsino3.setForeground(new java.awt.Color(66, 0, 0));
        jlEnsino3.setText("º Nome do curso");
        jPanel6.add(jlEnsino3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 61, -1, 20));

        jlSobreCurso8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSobreCurso8.setForeground(new java.awt.Color(66, 0, 0));
        jlSobreCurso8.setText("º Sobre o curso");
        jPanel6.add(jlSobreCurso8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 101, 28));

        taSobreCursoA.setColumns(20);
        taSobreCursoA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taSobreCursoA.setForeground(new java.awt.Color(66, 0, 0));
        taSobreCursoA.setRows(5);
        jScrollPane17.setViewportView(taSobreCursoA);

        jPanel6.add(jScrollPane17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 590, -1));

        jlSisu5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSisu5.setForeground(new java.awt.Color(66, 0, 0));
        jlSisu5.setText("º Nota de corte do SISU");
        jPanel6.add(jlSisu5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, 28));

        taCurrricularA.setColumns(20);
        taCurrricularA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taCurrricularA.setForeground(new java.awt.Color(66, 0, 0));
        taCurrricularA.setRows(5);
        jScrollPane18.setViewportView(taCurrricularA);

        jPanel6.add(jScrollPane18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 590, -1));

        jlGrade1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlGrade1.setForeground(new java.awt.Color(66, 0, 0));
        jlGrade1.setText("º Grade curricular");
        jPanel6.add(jlGrade1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, -1, 28));

        taSisuA.setColumns(20);
        taSisuA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taSisuA.setForeground(new java.awt.Color(66, 0, 0));
        taSisuA.setRows(5);
        jScrollPane19.setViewportView(taSisuA);

        jPanel6.add(jScrollPane19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 590, -1));

        jlAreaA1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlAreaA1.setForeground(new java.awt.Color(66, 0, 0));
        jlAreaA1.setText("º Área de atuação ou especialização");
        jPanel6.add(jlAreaA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, -1, 28));

        taAreaAA.setColumns(20);
        taAreaAA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taAreaAA.setForeground(new java.awt.Color(66, 0, 0));
        taAreaAA.setRows(5);
        jScrollPane20.setViewportView(taAreaAA);

        jPanel6.add(jScrollPane20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 570, 590, -1));

        jlSisu6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSisu6.setForeground(new java.awt.Color(66, 0, 0));
        jlSisu6.setText("º Pontos positivos");
        jPanel6.add(jlSisu6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 680, -1, 28));

        taPontosPA.setColumns(20);
        taPontosPA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taPontosPA.setForeground(new java.awt.Color(66, 0, 0));
        taPontosPA.setRows(5);
        jScrollPane21.setViewportView(taPontosPA);

        jPanel6.add(jScrollPane21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 710, 590, -1));

        jlSobreCurso9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSobreCurso9.setForeground(new java.awt.Color(66, 0, 0));
        jlSobreCurso9.setText("º Pontos negativos");
        jPanel6.add(jlSobreCurso9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 820, -1, 28));

        taPontosNA.setColumns(20);
        taPontosNA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taPontosNA.setForeground(new java.awt.Color(66, 0, 0));
        taPontosNA.setRows(5);
        taPontosNA.setToolTipText("");
        jScrollPane22.setViewportView(taPontosNA);

        jPanel6.add(jScrollPane22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 850, 590, -1));

        jlSobreCurso10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSobreCurso10.setForeground(new java.awt.Color(66, 0, 0));
        jlSobreCurso10.setText("º Perfil do profissional");
        jPanel6.add(jlSobreCurso10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 960, -1, 28));

        taPerfilPA.setColumns(20);
        taPerfilPA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taPerfilPA.setForeground(new java.awt.Color(66, 0, 0));
        taPerfilPA.setRows(5);
        taPerfilPA.setToolTipText("");
        jScrollPane23.setViewportView(taPerfilPA);

        jPanel6.add(jScrollPane23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 990, 590, -1));

        jlSisu7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSisu7.setForeground(new java.awt.Color(66, 0, 0));
        jlSisu7.setText("º Mercado atual");
        jPanel6.add(jlSisu7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 1100, -1, 28));

        taMercadoA.setColumns(20);
        taMercadoA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taMercadoA.setForeground(new java.awt.Color(66, 0, 0));
        taMercadoA.setRows(5);
        taMercadoA.setToolTipText("");
        jScrollPane24.setViewportView(taMercadoA);

        jPanel6.add(jScrollPane24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 1130, 590, -1));

        taSalarioA.setColumns(20);
        taSalarioA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taSalarioA.setForeground(new java.awt.Color(66, 0, 0));
        taSalarioA.setRows(5);
        taSalarioA.setToolTipText("");
        jScrollPane25.setViewportView(taSalarioA);

        jPanel6.add(jScrollPane25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 1270, 590, -1));

        jlSobreCurso11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSobreCurso11.setForeground(new java.awt.Color(66, 0, 0));
        jlSobreCurso11.setText("º Salário");
        jPanel6.add(jlSobreCurso11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 1240, 70, 28));

        jlArea2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlArea2.setForeground(new java.awt.Color(66, 0, 0));
        jlArea2.setText("º Link área:");
        jPanel6.add(jlArea2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 101, 20));

        jtNomeCursoA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtNomeCursoA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNomeCursoAActionPerformed(evt);
            }
        });
        jPanel6.add(jtNomeCursoA, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 133, -1));

        jtAreaCursoA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel6.add(jtAreaCursoA, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 133, -1));

        jtCodCursoA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtCodCursoA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCodCursoAActionPerformed(evt);
            }
        });
        jPanel6.add(jtCodCursoA, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 133, -1));

        jlArea3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlArea3.setForeground(new java.awt.Color(66, 0, 0));
        jlArea3.setText("º Código do curso");
        jPanel6.add(jlArea3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 101, 20));

        jbAnteriorCA.setBackground(new java.awt.Color(153, 102, 51));
        jbAnteriorCA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAnteriorCA.setForeground(new java.awt.Color(255, 255, 255));
        jbAnteriorCA.setText("Anterior");
        jbAnteriorCA.setToolTipText("");
        jbAnteriorCA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnteriorCAActionPerformed(evt);
            }
        });
        jPanel6.add(jbAnteriorCA, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 1370, -1, -1));

        jbProximoCA.setBackground(new java.awt.Color(153, 102, 51));
        jbProximoCA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbProximoCA.setForeground(new java.awt.Color(255, 255, 255));
        jbProximoCA.setText("Proximo");
        jbProximoCA.setToolTipText("");
        jbProximoCA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbProximoCAActionPerformed(evt);
            }
        });
        jPanel6.add(jbProximoCA, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1370, -1, -1));

        jbAlteraC.setBackground(new java.awt.Color(153, 102, 51));
        jbAlteraC.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAlteraC.setForeground(new java.awt.Color(255, 255, 255));
        jbAlteraC.setText("Alterar");
        jbAlteraC.setToolTipText("");
        jbAlteraC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlteraCActionPerformed(evt);
            }
        });
        jPanel6.add(jbAlteraC, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 1410, -1, -1));

        jScrollPaneAC.setViewportView(jPanel6);

        p2.add(jScrollPaneAC, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 630, 260));

        jPanelAA.setBackground(new java.awt.Color(255, 255, 255));
        jPanelAA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlNome17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome17.setForeground(new java.awt.Color(66, 0, 0));
        jlNome17.setText("Código área:");
        jPanelAA.add(jlNome17, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 80, 30));

        jtCodAreaA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtCodAreaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCodAreaAActionPerformed(evt);
            }
        });
        jPanelAA.add(jtCodAreaA, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 133, 31));

        jlNome18.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome18.setForeground(new java.awt.Color(66, 0, 0));
        jlNome18.setText("Nome área:");
        jPanelAA.add(jlNome18, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 80, 30));

        jtNomeAreaA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtNomeAreaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNomeAreaAActionPerformed(evt);
            }
        });
        jPanelAA.add(jtNomeAreaA, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 133, 31));

        jbProximoA.setBackground(new java.awt.Color(153, 102, 51));
        jbProximoA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbProximoA.setForeground(new java.awt.Color(255, 255, 255));
        jbProximoA.setText("Proximo");
        jbProximoA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbProximoAActionPerformed(evt);
            }
        });
        jPanelAA.add(jbProximoA, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 190, -1, -1));

        jbAnteriorA.setBackground(new java.awt.Color(153, 102, 51));
        jbAnteriorA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAnteriorA.setForeground(new java.awt.Color(255, 255, 255));
        jbAnteriorA.setText("Anterior");
        jbAnteriorA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnteriorAActionPerformed(evt);
            }
        });
        jPanelAA.add(jbAnteriorA, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, -1, -1));

        jbAlteraArea.setBackground(new java.awt.Color(153, 102, 51));
        jbAlteraArea.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAlteraArea.setForeground(new java.awt.Color(255, 255, 255));
        jbAlteraArea.setText("Alterar");
        jbAlteraArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlteraAreaActionPerformed(evt);
            }
        });
        jPanelAA.add(jbAlteraArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, -1, -1));

        p2.add(jPanelAA, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 610, 260));

        jPanelAP.setBackground(new java.awt.Color(255, 255, 255));
        jPanelAP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlNome19.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome19.setForeground(new java.awt.Color(66, 0, 0));
        jlNome19.setText("Link curso:");
        jPanelAP.add(jlNome19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 80, 30));

        jtLinkEtapaA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkEtapaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkEtapaAActionPerformed(evt);
            }
        });
        jPanelAP.add(jtLinkEtapaA, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 160, -1));

        jlNome20.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome20.setForeground(new java.awt.Color(66, 0, 0));
        jlNome20.setText("Descrição:");
        jPanelAP.add(jlNome20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 80, 30));

        jtCodPerA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtCodPerA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCodPerAActionPerformed(evt);
            }
        });
        jPanelAP.add(jtCodPerA, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 133, -1));

        jlNome21.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome21.setForeground(new java.awt.Color(66, 0, 0));
        jlNome21.setText("Código pergunta:");
        jPanelAP.add(jlNome21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 110, 30));

        jlNome22.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome22.setForeground(new java.awt.Color(66, 0, 0));
        jlNome22.setText("Link área:");
        jPanelAP.add(jlNome22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 80, 30));

        jlNome23.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome23.setForeground(new java.awt.Color(66, 0, 0));
        jlNome23.setText("Link etapa:");
        jPanelAP.add(jlNome23, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 80, 30));

        jtLinkAreaA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkAreaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkAreaAActionPerformed(evt);
            }
        });
        jPanelAP.add(jtLinkAreaA, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 160, -1));

        jtLinkCursoA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkCursoA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkCursoAActionPerformed(evt);
            }
        });
        jPanelAP.add(jtLinkCursoA, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 160, -1));

        taDescriA.setColumns(20);
        taDescriA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        taDescriA.setRows(5);
        taDescricao2.setViewportView(taDescriA);

        jPanelAP.add(taDescricao2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 460, -1));

        jbAnteriorP.setBackground(new java.awt.Color(153, 102, 51));
        jbAnteriorP.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAnteriorP.setForeground(new java.awt.Color(255, 255, 255));
        jbAnteriorP.setText("Anterior");
        jbAnteriorP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnteriorPActionPerformed(evt);
            }
        });
        jPanelAP.add(jbAnteriorP, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, -1, -1));

        jbProximoP.setBackground(new java.awt.Color(153, 102, 51));
        jbProximoP.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbProximoP.setForeground(new java.awt.Color(255, 255, 255));
        jbProximoP.setText("Proximo");
        jbProximoP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbProximoPActionPerformed(evt);
            }
        });
        jPanelAP.add(jbProximoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, -1, -1));

        jbAlterarP.setBackground(new java.awt.Color(153, 102, 51));
        jbAlterarP.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAlterarP.setForeground(new java.awt.Color(255, 255, 255));
        jbAlterarP.setText("Alterar");
        jbAlterarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarPActionPerformed(evt);
            }
        });
        jPanelAP.add(jbAlterarP, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, -1, -1));

        p2.add(jPanelAP, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 610, 290));

        jPanelAP1.setBackground(new java.awt.Color(255, 255, 255));
        jPanelAP1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtLinkEtapa1A.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkEtapa1A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkEtapa1AActionPerformed(evt);
            }
        });
        jPanelAP1.add(jtLinkEtapa1A, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 160, -1));

        jlNome24.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome24.setForeground(new java.awt.Color(66, 0, 0));
        jlNome24.setText("<html><center>Descrição<br>etapa 1:</center></html>");
        jPanelAP1.add(jlNome24, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 70, 40));

        jtCodPer1A.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtCodPer1A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCodPer1AActionPerformed(evt);
            }
        });
        jPanelAP1.add(jtCodPer1A, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 133, -1));

        jlNome25.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome25.setForeground(new java.awt.Color(66, 0, 0));
        jlNome25.setText("Código pergunta etapa 1:");
        jPanelAP1.add(jlNome25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 160, 30));

        jlNome26.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome26.setForeground(new java.awt.Color(66, 0, 0));
        jlNome26.setText("Link área:");
        jPanelAP1.add(jlNome26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 80, 30));

        jlNome27.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome27.setForeground(new java.awt.Color(66, 0, 0));
        jlNome27.setText("Link etapa:");
        jPanelAP1.add(jlNome27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 80, 30));

        jtLinkArea1A.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkArea1A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkArea1AActionPerformed(evt);
            }
        });
        jPanelAP1.add(jtLinkArea1A, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 160, -1));

        taDescri1A.setColumns(20);
        taDescri1A.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        taDescri1A.setRows(5);
        taDescricao3.setViewportView(taDescri1A);

        jPanelAP1.add(taDescricao3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 460, -1));

        jbAlteraP1.setBackground(new java.awt.Color(153, 102, 51));
        jbAlteraP1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAlteraP1.setForeground(new java.awt.Color(255, 255, 255));
        jbAlteraP1.setText("Alterar");
        jbAlteraP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlteraP1ActionPerformed(evt);
            }
        });
        jPanelAP1.add(jbAlteraP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, -1, -1));

        jbAnteriorP1.setBackground(new java.awt.Color(153, 102, 51));
        jbAnteriorP1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAnteriorP1.setForeground(new java.awt.Color(255, 255, 255));
        jbAnteriorP1.setText("Anterior");
        jbAnteriorP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnteriorP1ActionPerformed(evt);
            }
        });
        jPanelAP1.add(jbAnteriorP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, -1, -1));

        jbProximoP1.setBackground(new java.awt.Color(153, 102, 51));
        jbProximoP1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbProximoP1.setForeground(new java.awt.Color(255, 255, 255));
        jbProximoP1.setText("Proximo");
        jbProximoP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbProximoP1ActionPerformed(evt);
            }
        });
        jPanelAP1.add(jbProximoP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, -1, -1));

        p2.add(jPanelAP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 610, 260));

        jPanel1.add(p2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 670, 460));

        p1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlNome28.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome28.setForeground(new java.awt.Color(66, 0, 0));
        jlNome28.setText("Bem Vindo [Nome Administrador]");
        p1.add(jlNome28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 226, 34));

        jbCursoR.setBackground(new java.awt.Color(153, 102, 51));
        jbCursoR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbCursoR.setForeground(new java.awt.Color(255, 255, 255));
        jbCursoR.setText("Curso ");
        jbCursoR.setToolTipText("");
        jbCursoR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCursoRActionPerformed(evt);
            }
        });
        p1.add(jbCursoR, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, -1, -1));

        jbAreaR.setBackground(new java.awt.Color(153, 102, 51));
        jbAreaR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAreaR.setForeground(new java.awt.Color(255, 255, 255));
        jbAreaR.setText("Área do Conhecimento");
        jbAreaR.setToolTipText("");
        jbAreaR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAreaRActionPerformed(evt);
            }
        });
        p1.add(jbAreaR, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));

        jbPergunta1R.setBackground(new java.awt.Color(153, 102, 51));
        jbPergunta1R.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbPergunta1R.setForeground(new java.awt.Color(255, 255, 255));
        jbPergunta1R.setText("Pergunta etapa 1");
        jbPergunta1R.setToolTipText("");
        jbPergunta1R.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPergunta1RActionPerformed(evt);
            }
        });
        p1.add(jbPergunta1R, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, -1, -1));

        jbPerguntaR.setBackground(new java.awt.Color(153, 102, 51));
        jbPerguntaR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbPerguntaR.setForeground(new java.awt.Color(255, 255, 255));
        jbPerguntaR.setText("Pergunta");
        jbPerguntaR.setToolTipText("");
        jbPerguntaR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPerguntaRActionPerformed(evt);
            }
        });
        p1.add(jbPerguntaR, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, -1, -1));

        jlT5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlT5.setForeground(new java.awt.Color(66, 0, 0));
        jlT5.setText("Selecione o que deseja remover:");
        p1.add(jlT5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 200, 34));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlEnsino4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlEnsino4.setForeground(new java.awt.Color(66, 0, 0));
        jlEnsino4.setText("º Nome do curso");
        jPanel10.add(jlEnsino4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 61, -1, 20));

        jlSobreCurso12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSobreCurso12.setForeground(new java.awt.Color(66, 0, 0));
        jlSobreCurso12.setText("º Sobre o curso");
        jPanel10.add(jlSobreCurso12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 101, 28));

        taSobreCursoR.setColumns(20);
        taSobreCursoR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taSobreCursoR.setForeground(new java.awt.Color(66, 0, 0));
        taSobreCursoR.setRows(5);
        jScrollPane26.setViewportView(taSobreCursoR);

        jPanel10.add(jScrollPane26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 590, -1));

        jlSisu8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSisu8.setForeground(new java.awt.Color(66, 0, 0));
        jlSisu8.setText("º Nota de corte do SISU");
        jPanel10.add(jlSisu8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, 28));

        taCurrricularR.setColumns(20);
        taCurrricularR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taCurrricularR.setForeground(new java.awt.Color(66, 0, 0));
        taCurrricularR.setRows(5);
        jScrollPane27.setViewportView(taCurrricularR);

        jPanel10.add(jScrollPane27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 590, -1));

        jlGrade2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlGrade2.setForeground(new java.awt.Color(66, 0, 0));
        jlGrade2.setText("º Grade curricular");
        jPanel10.add(jlGrade2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, -1, 28));

        taSisuR.setColumns(20);
        taSisuR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taSisuR.setForeground(new java.awt.Color(66, 0, 0));
        taSisuR.setRows(5);
        jScrollPane28.setViewportView(taSisuR);

        jPanel10.add(jScrollPane28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 590, -1));

        jlAreaA2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlAreaA2.setForeground(new java.awt.Color(66, 0, 0));
        jlAreaA2.setText("º Área de atuação ou especialização");
        jPanel10.add(jlAreaA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, -1, 28));

        taAreaAR.setColumns(20);
        taAreaAR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taAreaAR.setForeground(new java.awt.Color(66, 0, 0));
        taAreaAR.setRows(5);
        jScrollPane29.setViewportView(taAreaAR);

        jPanel10.add(jScrollPane29, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 590, -1));

        jlSisu9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSisu9.setForeground(new java.awt.Color(66, 0, 0));
        jlSisu9.setText("º Pontos positivos");
        jPanel10.add(jlSisu9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 640, -1, 28));

        taPontosPR.setColumns(20);
        taPontosPR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taPontosPR.setForeground(new java.awt.Color(66, 0, 0));
        taPontosPR.setRows(5);
        jScrollPane30.setViewportView(taPontosPR);

        jPanel10.add(jScrollPane30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 670, 590, -1));

        jlSobreCurso13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSobreCurso13.setForeground(new java.awt.Color(66, 0, 0));
        jlSobreCurso13.setText("º Pontos negativos");
        jPanel10.add(jlSobreCurso13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 770, -1, 28));

        taPontosNR.setColumns(20);
        taPontosNR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taPontosNR.setForeground(new java.awt.Color(66, 0, 0));
        taPontosNR.setRows(5);
        taPontosNR.setToolTipText("");
        jScrollPane31.setViewportView(taPontosNR);

        jPanel10.add(jScrollPane31, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 800, 590, -1));

        jlSobreCurso14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSobreCurso14.setForeground(new java.awt.Color(66, 0, 0));
        jlSobreCurso14.setText("º Perfil do profissional");
        jPanel10.add(jlSobreCurso14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 900, -1, 28));

        taPerfilPR.setColumns(20);
        taPerfilPR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taPerfilPR.setForeground(new java.awt.Color(66, 0, 0));
        taPerfilPR.setRows(5);
        taPerfilPR.setToolTipText("");
        jScrollPane32.setViewportView(taPerfilPR);

        jPanel10.add(jScrollPane32, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 930, 590, -1));

        jlSisu10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSisu10.setForeground(new java.awt.Color(66, 0, 0));
        jlSisu10.setText("º Mercado atual");
        jPanel10.add(jlSisu10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 1030, -1, 28));

        taMercadoR.setColumns(20);
        taMercadoR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taMercadoR.setForeground(new java.awt.Color(66, 0, 0));
        taMercadoR.setRows(5);
        taMercadoR.setToolTipText("");
        jScrollPane33.setViewportView(taMercadoR);

        jPanel10.add(jScrollPane33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 1060, 590, -1));

        taSalarioR.setColumns(20);
        taSalarioR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        taSalarioR.setForeground(new java.awt.Color(66, 0, 0));
        taSalarioR.setRows(5);
        taSalarioR.setToolTipText("");
        jScrollPane34.setViewportView(taSalarioR);

        jPanel10.add(jScrollPane34, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 1190, 590, -1));

        jlSobreCurso15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSobreCurso15.setForeground(new java.awt.Color(66, 0, 0));
        jlSobreCurso15.setText("º Salário");
        jPanel10.add(jlSobreCurso15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 1160, -1, 28));

        jlArea4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlArea4.setForeground(new java.awt.Color(66, 0, 0));
        jlArea4.setText("º Área do curso");
        jPanel10.add(jlArea4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 101, 20));

        jtNomeCursoR.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtNomeCursoR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNomeCursoRActionPerformed(evt);
            }
        });
        jPanel10.add(jtNomeCursoR, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 133, -1));

        jtAreaCursoR.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel10.add(jtAreaCursoR, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 133, -1));

        jtCodCursoR.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtCodCursoR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCodCursoRActionPerformed(evt);
            }
        });
        jPanel10.add(jtCodCursoR, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 133, -1));

        jlArea5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlArea5.setForeground(new java.awt.Color(66, 0, 0));
        jlArea5.setText("º Código do curso");
        jPanel10.add(jlArea5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 101, 20));

        jbRemoverCurso.setBackground(new java.awt.Color(153, 102, 51));
        jbRemoverCurso.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbRemoverCurso.setForeground(new java.awt.Color(255, 255, 255));
        jbRemoverCurso.setText("Remover");
        jbRemoverCurso.setToolTipText("");
        jbRemoverCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverCursoActionPerformed(evt);
            }
        });
        jPanel10.add(jbRemoverCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 1320, -1, -1));

        jbAnteriorRC.setBackground(new java.awt.Color(153, 102, 51));
        jbAnteriorRC.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAnteriorRC.setForeground(new java.awt.Color(255, 255, 255));
        jbAnteriorRC.setText("Anterior");
        jbAnteriorRC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnteriorRCActionPerformed(evt);
            }
        });
        jPanel10.add(jbAnteriorRC, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 1290, 90, -1));

        jbProximoRC.setBackground(new java.awt.Color(153, 102, 51));
        jbProximoRC.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbProximoRC.setForeground(new java.awt.Color(255, 255, 255));
        jbProximoRC.setText("Proximo");
        jbProximoRC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbProximoRCActionPerformed(evt);
            }
        });
        jPanel10.add(jbProximoRC, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 1290, -1, -1));

        jScrollPaneRC.setViewportView(jPanel10);

        p1.add(jScrollPaneRC, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 630, 260));

        jPanelRA.setBackground(new java.awt.Color(255, 255, 255));
        jPanelRA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlNome1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome1.setForeground(new java.awt.Color(66, 0, 0));
        jlNome1.setText("Código área:");
        jPanelRA.add(jlNome1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 80, 30));

        jtCodAreaR.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtCodAreaR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCodAreaRActionPerformed(evt);
            }
        });
        jPanelRA.add(jtCodAreaR, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 133, 31));

        jlNome29.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome29.setForeground(new java.awt.Color(66, 0, 0));
        jlNome29.setText("Nome área:");
        jPanelRA.add(jlNome29, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 80, 30));

        jtNomeAreaR.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtNomeAreaR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNomeAreaRActionPerformed(evt);
            }
        });
        jPanelRA.add(jtNomeAreaR, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 133, 31));

        jbRemoverArea.setBackground(new java.awt.Color(153, 102, 51));
        jbRemoverArea.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbRemoverArea.setForeground(new java.awt.Color(255, 255, 255));
        jbRemoverArea.setText("Remover");
        jbRemoverArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverAreaActionPerformed(evt);
            }
        });
        jPanelRA.add(jbRemoverArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, -1, -1));

        jbAnteriorRA.setBackground(new java.awt.Color(153, 102, 51));
        jbAnteriorRA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAnteriorRA.setForeground(new java.awt.Color(255, 255, 255));
        jbAnteriorRA.setText("Anterior");
        jbAnteriorRA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnteriorRAActionPerformed(evt);
            }
        });
        jPanelRA.add(jbAnteriorRA, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, -1, -1));

        jbProximoRA.setBackground(new java.awt.Color(153, 102, 51));
        jbProximoRA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbProximoRA.setForeground(new java.awt.Color(255, 255, 255));
        jbProximoRA.setText("Proximo");
        jbProximoRA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbProximoRAActionPerformed(evt);
            }
        });
        jPanelRA.add(jbProximoRA, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, -1, -1));

        p1.add(jPanelRA, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 610, 260));

        jPanelRP.setBackground(new java.awt.Color(255, 255, 255));
        jPanelRP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlNome30.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome30.setForeground(new java.awt.Color(66, 0, 0));
        jlNome30.setText("Link curso:");
        jPanelRP.add(jlNome30, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 80, 30));

        jtLinkEtapaR.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkEtapaR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkEtapaRActionPerformed(evt);
            }
        });
        jPanelRP.add(jtLinkEtapaR, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 160, -1));

        jlNome31.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome31.setForeground(new java.awt.Color(66, 0, 0));
        jlNome31.setText("Descrição:");
        jPanelRP.add(jlNome31, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 80, 30));

        jtCodPerR.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtCodPerR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCodPerRActionPerformed(evt);
            }
        });
        jPanelRP.add(jtCodPerR, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 133, -1));

        jlNome32.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome32.setForeground(new java.awt.Color(66, 0, 0));
        jlNome32.setText("Código pergunta:");
        jPanelRP.add(jlNome32, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 110, 30));

        jlNome33.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome33.setForeground(new java.awt.Color(66, 0, 0));
        jlNome33.setText("Link área:");
        jPanelRP.add(jlNome33, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 80, 30));

        jlNome34.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome34.setForeground(new java.awt.Color(66, 0, 0));
        jlNome34.setText("Link etapa:");
        jPanelRP.add(jlNome34, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 80, 30));

        jtLinkAreaR.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkAreaR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkAreaRActionPerformed(evt);
            }
        });
        jPanelRP.add(jtLinkAreaR, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 160, -1));

        jtLinkCursoR.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkCursoR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkCursoRActionPerformed(evt);
            }
        });
        jPanelRP.add(jtLinkCursoR, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 160, -1));

        taDescriR.setColumns(20);
        taDescriR.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        taDescriR.setRows(5);
        taDescricao4.setViewportView(taDescriR);

        jPanelRP.add(taDescricao4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 460, -1));

        jbProximoPerR.setBackground(new java.awt.Color(153, 102, 51));
        jbProximoPerR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbProximoPerR.setForeground(new java.awt.Color(255, 255, 255));
        jbProximoPerR.setText("Proximo");
        jbProximoPerR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbProximoPerRActionPerformed(evt);
            }
        });
        jPanelRP.add(jbProximoPerR, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 230, -1, -1));

        jbRemoverPerR.setBackground(new java.awt.Color(153, 102, 51));
        jbRemoverPerR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbRemoverPerR.setForeground(new java.awt.Color(255, 255, 255));
        jbRemoverPerR.setText("Remover");
        jbRemoverPerR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverPerRActionPerformed(evt);
            }
        });
        jPanelRP.add(jbRemoverPerR, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 260, -1, -1));

        jbAnteriorPerR.setBackground(new java.awt.Color(153, 102, 51));
        jbAnteriorPerR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAnteriorPerR.setForeground(new java.awt.Color(255, 255, 255));
        jbAnteriorPerR.setText("Anterior");
        jbAnteriorPerR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnteriorPerRActionPerformed(evt);
            }
        });
        jPanelRP.add(jbAnteriorPerR, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, -1, -1));

        p1.add(jPanelRP, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 610, 300));

        jPanelRP1.setBackground(new java.awt.Color(255, 255, 255));
        jPanelRP1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtLinkEtapa1R.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkEtapa1R.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkEtapa1RActionPerformed(evt);
            }
        });
        jPanelRP1.add(jtLinkEtapa1R, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 160, -1));

        jlNome35.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome35.setForeground(new java.awt.Color(66, 0, 0));
        jlNome35.setText("<html><center>Descrição<br>etapa 1:</center></html>");
        jPanelRP1.add(jlNome35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 70, 40));

        jtCodPer1R.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtCodPer1R.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCodPer1RActionPerformed(evt);
            }
        });
        jPanelRP1.add(jtCodPer1R, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 133, -1));

        jlNome36.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome36.setForeground(new java.awt.Color(66, 0, 0));
        jlNome36.setText("Código pergunta etapa 1:");
        jPanelRP1.add(jlNome36, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 160, 30));

        jlNome37.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome37.setForeground(new java.awt.Color(66, 0, 0));
        jlNome37.setText("Link área:");
        jPanelRP1.add(jlNome37, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 80, 30));

        jlNome38.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNome38.setForeground(new java.awt.Color(66, 0, 0));
        jlNome38.setText("Link etapa:");
        jPanelRP1.add(jlNome38, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 80, 30));

        jtLinkArea1R.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jtLinkArea1R.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtLinkArea1RActionPerformed(evt);
            }
        });
        jPanelRP1.add(jtLinkArea1R, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 160, -1));

        taDescri1R.setColumns(20);
        taDescri1R.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        taDescri1R.setRows(5);
        taDescricao5.setViewportView(taDescri1R);

        jPanelRP1.add(taDescricao5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 460, -1));

        jbRemoverPer1.setBackground(new java.awt.Color(153, 102, 51));
        jbRemoverPer1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbRemoverPer1.setForeground(new java.awt.Color(255, 255, 255));
        jbRemoverPer1.setText("Remover");
        jbRemoverPer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverPer1ActionPerformed(evt);
            }
        });
        jPanelRP1.add(jbRemoverPer1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, -1, -1));

        jbAnteriorPer1.setBackground(new java.awt.Color(153, 102, 51));
        jbAnteriorPer1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbAnteriorPer1.setForeground(new java.awt.Color(255, 255, 255));
        jbAnteriorPer1.setText("Anterior");
        jbAnteriorPer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnteriorPer1ActionPerformed(evt);
            }
        });
        jPanelRP1.add(jbAnteriorPer1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, -1, -1));

        jbProximoPer1.setBackground(new java.awt.Color(153, 102, 51));
        jbProximoPer1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbProximoPer1.setForeground(new java.awt.Color(255, 255, 255));
        jbProximoPer1.setText("Proximo");
        jbProximoPer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbProximoPer1ActionPerformed(evt);
            }
        });
        jPanelRP1.add(jbProximoPer1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 200, -1, -1));

        p1.add(jPanelRP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 610, 260));

        jPanel1.add(p1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 670, 460));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbCancelar4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelar4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbCancelar4ActionPerformed

    private void jpSenha4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpSenha4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jpSenha4ActionPerformed

    private void jbCadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadActionPerformed
        p1.setVisible(false);
        p2.setVisible(false);
        p3.setVisible(false);
        p4.setVisible(true);
        p5.setVisible(false);
    }//GEN-LAST:event_jbCadActionPerformed

    private void jbInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInserirActionPerformed
        p1.setVisible(false);
        p2.setVisible(false);
        p3.setVisible(true);
        p4.setVisible(false);
        p5.setVisible(false);
        jScrollPaneIC.setVisible(false);
        jPanelIA.setVisible(false);
        jPanelIP.setVisible(false);
        jPanelIP1.setVisible(false);
    }//GEN-LAST:event_jbInserirActionPerformed

    private void jbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSairActionPerformed
        PainelPrincipal p = new PainelPrincipal();
        p.setVisible(true);
        p.setLocationRelativeTo(null);
        dispose();

    }//GEN-LAST:event_jbSairActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        p1.setVisible(false);
        p2.setVisible(true);
        p3.setVisible(false);
        p4.setVisible(false);
        p5.setVisible(false);
        jScrollPaneAC.setVisible(false);
        jPanelAA.setVisible(false);
        jPanelAP.setVisible(false);
        jPanelAP1.setVisible(false);
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverActionPerformed

        p2.setVisible(false);
        p3.setVisible(false);
        p4.setVisible(false);
        p5.setVisible(false);
        p1.setVisible(true);
        jScrollPaneRC.setVisible(false);
        jPanelRA.setVisible(false);
        jPanelRP.setVisible(false);
        jPanelRP1.setVisible(false);
    }//GEN-LAST:event_jbRemoverActionPerformed

    private void jbCadastrar4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrar4ActionPerformed
        String nome = "", senha = "";
        nome = jtNome4.getText();
        senha = new String(jpSenha4.getPassword());
        Psicologo objPsicologo = new Psicologo(nome, senha);
        BDpsicologo objBD = new BDpsicologo();

        if (objBD.inserePsicologo(objPsicologo)) {
            JOptionPane.showMessageDialog(rootPane, "Dados gravados com sucesso",
                    "Confirmação de cadastro", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário já existente.",
                    "Alerta de erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jbCadastrar4ActionPerformed

    private void jbCursoIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCursoIActionPerformed

        jScrollPaneIC.setVisible(true);
        jPanelIA.setVisible(false);
        jPanelIP.setVisible(false);
        jPanelIP1.setVisible(false);
    }//GEN-LAST:event_jbCursoIActionPerformed

    private void jbAreaIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAreaIActionPerformed
       jScrollPaneIC.setVisible(false);         // TODO add your handling code here:
        jPanelIA.setVisible(true);
        jPanelIP.setVisible(false);
        jPanelIP1.setVisible(false);
    }//GEN-LAST:event_jbAreaIActionPerformed

    private void jtNomeCursoIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNomeCursoIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNomeCursoIActionPerformed

    private void jtCodAreaIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCodAreaIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCodAreaIActionPerformed

    private void jtNomeAreaIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNomeAreaIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNomeAreaIActionPerformed

    private void jtLinkEtapaIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkEtapaIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkEtapaIActionPerformed

    private void jtCodPerIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCodPerIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCodPerIActionPerformed

    private void jtLinkAreaIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkAreaIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkAreaIActionPerformed

    private void jtCodCursoIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCodCursoIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCodCursoIActionPerformed

    private void jbInsereCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInsereCursoActionPerformed
        String nome_curso = "", sobre_curso = "", notas_de_corte = "", grade_curricular = "", area_atuacao = "", pontos_positivos = "",
                pontos_negativos = "", perfil_profissional = "", mercado_atual = "", salario = "";
        int cod_curso, link_area;

        nome_curso = jtNomeCursoI.getText();
        sobre_curso = taSobreCursoI.getText();
        notas_de_corte = taSisuI.getText();
        grade_curricular = taCurrricularI.getText();
        area_atuacao = taAreaAI.getText();
        pontos_positivos = taPontosPI.getText();
        pontos_negativos = taPontosNI.getText();
        perfil_profissional = taPerfilPI.getText();
        mercado_atual = taMercadoI.getText();
        salario = taSalarioI.getText();
        cod_curso = Integer.parseInt(jtCodCursoI.getText());
        link_area = Integer.parseInt(jtAreaCursoI.getText());

        Curso objCurso = new Curso(cod_curso, nome_curso, link_area, sobre_curso, notas_de_corte, grade_curricular,
                area_atuacao, pontos_positivos, pontos_negativos, perfil_profissional, mercado_atual, salario);
        BdCursos objBD = new BdCursos();

        if (objBD.insereCurso(objCurso)) {
            JOptionPane.showMessageDialog(rootPane, "Dados gravados com sucesso",
                    "Confirmação de cadastro", JOptionPane.INFORMATION_MESSAGE);
            // Fecho o Frame atual
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário já existente.",
                    "Alerta de erro", JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jbInsereCursoActionPerformed

    private void jbPerguntaIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPerguntaIActionPerformed
        jScrollPaneIC.setVisible(false);
        jPanelIA.setVisible(false);
        jPanelIP.setVisible(false);
        jPanelIP1.setVisible(true);
    }//GEN-LAST:event_jbPerguntaIActionPerformed

    private void jbInserePerguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInserePerguntaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbInserePerguntaActionPerformed

    private void jbInserePerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInserePerActionPerformed
        String descricao = "";
        int cod_pergunta, link_area, link_etapa, link_curso;

        descricao = taDescriI.getText();
        cod_pergunta = Integer.parseInt(jtCodPerI.getText());
        link_area = Integer.parseInt(jtLinkAreaI.getText());
        link_etapa = Integer.parseInt(jtLinkEtapaI.getText());
        link_curso = Integer.parseInt(jtLinkCursoI.getText());

        Pergunta objPer = new Pergunta(descricao, cod_pergunta, link_area, link_etapa, link_curso);
        BDPergunta objBD = new BDPergunta();

        if (objBD.inserePergunta(objPer)) {
            JOptionPane.showMessageDialog(rootPane, "Dados gravados com sucesso",
                    "Confirmação de cadastro", JOptionPane.INFORMATION_MESSAGE);
            // Fecho o Frame atual
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário já existente.",
                    "Alerta de erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jbInserePerActionPerformed

    private void jbInsereAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInsereAreaActionPerformed
        String nome_area = "";
        int cod_area;

        nome_area = jtNomeAreaI.getText();
        cod_area = Integer.parseInt(jtCodAreaI.getText());

        Area objArea = new Area(nome_area, cod_area);
        BDArea objBD = new BDArea();

        if (objBD.insereArea(objArea)) {
            JOptionPane.showMessageDialog(rootPane, "Dados gravados com sucesso",
                    "Confirmação de cadastro", JOptionPane.INFORMATION_MESSAGE);
            // Fecho o Frame atual
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário já existente.",
                    "Alerta de erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jbInsereAreaActionPerformed

    private void jtLinkEtapa1IActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkEtapa1IActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkEtapa1IActionPerformed

    private void jtCodPer1IActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCodPer1IActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCodPer1IActionPerformed

    private void jtLinkArea1IActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkArea1IActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkArea1IActionPerformed

    private void jbInserePer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInserePer1ActionPerformed
        String descricao = "";
        int cod_pergunta, link_area, link_etapa;

        descricao = taDescri1I.getText();
        cod_pergunta = Integer.parseInt(jtCodPer1I.getText());
        link_area = Integer.parseInt(jtLinkArea1I.getText());
        link_etapa = Integer.parseInt(jtLinkEtapa1I.getText());

        Pergunta objPer = new Pergunta(descricao, cod_pergunta, link_area, link_etapa);
        BDPergunta objBD = new BDPergunta();

        if (objBD.inserePerguntaEtapa1(objPer)) {
            JOptionPane.showMessageDialog(rootPane, "Dados gravados com sucesso",
                    "Confirmação de cadastro", JOptionPane.INFORMATION_MESSAGE);
            // Fecho o Frame atual
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário já existente.",
                    "Alerta de erro", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jbInserePer1ActionPerformed

    private void jtLinkCursoIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkCursoIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkCursoIActionPerformed

    private void jbPergunta1IActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPergunta1IActionPerformed
        jScrollPaneIC.setVisible(false);
        jPanelIA.setVisible(false);
        jPanelIP.setVisible(true);
        jPanelIP1.setVisible(false);
    }//GEN-LAST:event_jbPergunta1IActionPerformed

    private void jbCursoAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCursoAActionPerformed
        jScrollPaneAC.setVisible(true);
        jPanelAA.setVisible(false);
        jPanelAP.setVisible(false);
        jPanelAP1.setVisible(false);

        BdCursos bd = new BdCursos();
        listaCursos = bd.buscaCursosGeral();
        this.indiceAtualAlteraCurso = 0;
        jtCodCursoA.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getCod_curso()));
        jtNomeCursoA.setText(listaCursos.get(indiceAtualAlteraCurso).getNome_curso());
        jtAreaCursoA.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getLink_area()));
        taSobreCursoA.setLineWrap(true);
        taSisuA.setLineWrap(true);
        taCurrricularA.setLineWrap(true);
        taAreaAA.setLineWrap(true);
        taPontosPA.setLineWrap(true);
        taPontosNA.setLineWrap(true);
        taPerfilPA.setLineWrap(true);
        taMercadoA.setLineWrap(true);
        taSalarioA.setLineWrap(true);
        taSobreCursoA.append(listaCursos.get(indiceAtualAlteraCurso).getSobre_curso());
        taSisuA.append(listaCursos.get(indiceAtualAlteraCurso).getNotas_de_corte());
        taCurrricularA.append(listaCursos.get(indiceAtualAlteraCurso).getGrade_curricular());
        taAreaAA.append(listaCursos.get(indiceAtualAlteraCurso).getArea_atuacao());
        taPontosPA.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_positivos());
        taPontosNA.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_negativos());
        taPerfilPA.append(listaCursos.get(indiceAtualAlteraCurso).getPerfil_profissional());
        taMercadoA.append(listaCursos.get(indiceAtualAlteraCurso).getMercado_atual());
        taSalarioA.append(listaCursos.get(indiceAtualAlteraCurso).getSalario());

    }//GEN-LAST:event_jbCursoAActionPerformed

    private void jbAreaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAreaAActionPerformed
        jScrollPaneAC.setVisible(false);
        jPanelAA.setVisible(true);
        jPanelAP1.setVisible(false);
        jPanelAP.setVisible(false);

        BDArea bd = new BDArea();
        listaArea = bd.buscaArea();
        this.indiceAtualAlteraArea = 0;
        jtNomeAreaA.setText(listaArea.get(indiceAtualAlteraArea).getNome());
        jtCodAreaA.setText(String.valueOf(listaArea.get(indiceAtualAlteraArea).getCod_area()));
    }//GEN-LAST:event_jbAreaAActionPerformed

    private void jbPergunta1AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPergunta1AActionPerformed
        jScrollPaneAC.setVisible(false);
        jPanelAA.setVisible(false);
        jPanelAP1.setVisible(true);
        jPanelAP.setVisible(false);

        BDPergunta bd = new BDPergunta();
        listaPerguntaE1 = bd.buscaPerguntasEtapa1();
        this.indiceAtualAlteraPerguntaE1 = 0;
        jtCodPer1A.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getCod_pergunta()));
        jtLinkArea1A.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_area()));
        jtLinkEtapa1A.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_etapa()));
        taDescri1A.setText(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getDescricao());
    }//GEN-LAST:event_jbPergunta1AActionPerformed

    private void jtNomeCursoAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNomeCursoAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNomeCursoAActionPerformed

    private void jtCodCursoAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCodCursoAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCodCursoAActionPerformed

    private void jbAnteriorCAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnteriorCAActionPerformed
        if (this.indiceAtualAlteraCurso > 0) {
            this.indiceAtualAlteraCurso--;
            taSobreCursoA.setLineWrap(true);
            taSisuA.setLineWrap(true);
            taCurrricularA.setLineWrap(true);
            taAreaAA.setLineWrap(true);
            taPontosPA.setLineWrap(true);
            taPontosNA.setLineWrap(true);
            taPerfilPA.setLineWrap(true);
            taMercadoA.setLineWrap(true);
            taSalarioA.setLineWrap(true);
            jtCodCursoA.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getCod_curso()));
            jtNomeCursoA.setText(listaCursos.get(indiceAtualAlteraCurso).getNome_curso());
            jtAreaCursoA.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getLink_area()));
            taSobreCursoA.append(listaCursos.get(indiceAtualAlteraCurso).getSobre_curso());
            taSisuA.append(listaCursos.get(indiceAtualAlteraCurso).getNotas_de_corte());
            taCurrricularA.append(listaCursos.get(indiceAtualAlteraCurso).getGrade_curricular());
            taAreaAA.append(listaCursos.get(indiceAtualAlteraCurso).getArea_atuacao());
            taPontosPA.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_positivos());
            taPontosNA.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_negativos());
            taPerfilPA.append(listaCursos.get(indiceAtualAlteraCurso).getPerfil_profissional());
            taMercadoA.append(listaCursos.get(indiceAtualAlteraCurso).getMercado_atual());
            taSalarioA.append(listaCursos.get(indiceAtualAlteraCurso).getSalario());
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }

    }//GEN-LAST:event_jbAnteriorCAActionPerformed

    private void jtCodAreaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCodAreaAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCodAreaAActionPerformed

    private void jtNomeAreaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNomeAreaAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNomeAreaAActionPerformed

    private void jbProximoAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbProximoAActionPerformed
        if (this.indiceAtualAlteraArea >= 0 && this.indiceAtualAlteraArea < this.listaArea.size() - 1) {
            this.indiceAtualAlteraArea++;
            jtNomeAreaA.setText(listaArea.get(indiceAtualAlteraArea).getNome());
            jtCodAreaA.setText(String.valueOf(listaArea.get(indiceAtualAlteraArea).getCod_area()));
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }
    }//GEN-LAST:event_jbProximoAActionPerformed

    private void jtLinkEtapaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkEtapaAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkEtapaAActionPerformed

    private void jtCodPerAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCodPerAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCodPerAActionPerformed

    private void jtLinkAreaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkAreaAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkAreaAActionPerformed

    private void jtLinkCursoAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkCursoAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkCursoAActionPerformed

    private void jbAnteriorPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnteriorPActionPerformed
        if (this.indiceAtualAlteraPergunta > 0) {
            this.indiceAtualAlteraPergunta--;
            jtCodPerA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getCod_pergunta()));
            jtLinkAreaA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_area()));
            jtLinkEtapaA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_etapa()));
            jtLinkCursoA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_curso()));
            taDescriA.setText(listaPergunta.get(indiceAtualAlteraPergunta).getDescricao());
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }
    }//GEN-LAST:event_jbAnteriorPActionPerformed

    private void jtLinkEtapa1AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkEtapa1AActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkEtapa1AActionPerformed

    private void jtCodPer1AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCodPer1AActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCodPer1AActionPerformed

    private void jtLinkArea1AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkArea1AActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkArea1AActionPerformed

    private void jbAlteraP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlteraP1ActionPerformed
        String descricao = "";
        int cod_pergunta, link_area, link_etapa;

        cod_pergunta = Integer.parseInt(jtCodPer1A.getText());
        link_area = Integer.parseInt(jtLinkArea1A.getText());
        link_etapa = Integer.parseInt(jtLinkEtapa1A.getText());
        descricao = taDescri1A.getText();

        Pergunta objPer = new Pergunta(descricao, cod_pergunta, link_area, link_etapa);
        BDPergunta objBD = new BDPergunta();

        // atualizo no BD e carrego novamente a lista de Pergunta
        if (objBD.alteraPerguntaEtapa1(objPer)) {
            JOptionPane.showMessageDialog(rootPane, "Dados alterados com sucesso",
                    "Confirmação de alteração", JOptionPane.INFORMATION_MESSAGE);
            // Carrego novamente a lista atual
            listaPerguntaE1 = objBD.buscaPerguntasEtapa1();
            jtCodPer1A.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getCod_pergunta()));
            jtLinkArea1A.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_area()));
            jtLinkEtapa1A.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_etapa()));
            taDescri1A.setText(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getDescricao());

        } else {
            JOptionPane.showMessageDialog(rootPane, "Dados não gravados",
                    "Alerta de erro", JOptionPane.ERROR_MESSAGE);
            // Volta o cursor para o campo código
            jtCodPer1A.selectAll();
            jtCodPer1A.requestFocusInWindow();
        }
    }//GEN-LAST:event_jbAlteraP1ActionPerformed

    private void jbPerguntaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPerguntaAActionPerformed
        jScrollPaneAC.setVisible(false);
        jPanelAA.setVisible(false);
        jPanelAP1.setVisible(false);
        jPanelAP.setVisible(true);

        BDPergunta bd = new BDPergunta();
        listaPergunta = bd.buscaPerguntasGeral();
        this.indiceAtualAlteraPergunta = 0;
        jtCodPerA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getCod_pergunta()));
        jtLinkAreaA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_area()));
        jtLinkEtapaA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_etapa()));
        jtLinkCursoA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_curso()));
        taDescriA.setText(listaPergunta.get(indiceAtualAlteraPergunta).getDescricao());

    }//GEN-LAST:event_jbPerguntaAActionPerformed

    private void jbCursoRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCursoRActionPerformed
        jScrollPaneRC.setVisible(true);
        jPanelRA.setVisible(false);
        jPanelRP.setVisible(false);
        jPanelRP1.setVisible(false);

        BdCursos bd = new BdCursos();
        listaCursos = bd.buscaCursosGeral();
        this.indiceAtualAlteraCurso = 0;
        taSobreCursoR.setLineWrap(true);
        taSisuR.setLineWrap(true);
        taCurrricularR.setLineWrap(true);
        taAreaAR.setLineWrap(true);
        taPontosPR.setLineWrap(true);
        taPontosNR.setLineWrap(true);
        taPerfilPR.setLineWrap(true);
        taMercadoR.setLineWrap(true);
        taSalarioR.setLineWrap(true);
        jtCodCursoR.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getCod_curso()));
        jtNomeCursoR.setText(listaCursos.get(indiceAtualAlteraCurso).getNome_curso());
        jtAreaCursoR.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getLink_area()));
        taSobreCursoR.append(listaCursos.get(indiceAtualAlteraCurso).getSobre_curso());
        taSisuR.append(listaCursos.get(indiceAtualAlteraCurso).getNotas_de_corte());
        taCurrricularR.append(listaCursos.get(indiceAtualAlteraCurso).getGrade_curricular());
        taAreaAR.append(listaCursos.get(indiceAtualAlteraCurso).getArea_atuacao());
        taPontosPR.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_positivos());
        taPontosNR.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_negativos());
        taPerfilPR.append(listaCursos.get(indiceAtualAlteraCurso).getPerfil_profissional());
        taMercadoR.append(listaCursos.get(indiceAtualAlteraCurso).getMercado_atual());
        taSalarioR.append(listaCursos.get(indiceAtualAlteraCurso).getSalario());

    }//GEN-LAST:event_jbCursoRActionPerformed

    private void jbAreaRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAreaRActionPerformed
        jScrollPaneRC.setVisible(false);
        jPanelRA.setVisible(true);
        jPanelRP.setVisible(false);
        jPanelRP1.setVisible(false);

        BDArea bd = new BDArea();
        listaArea = bd.buscaArea();
        this.indiceAtualAlteraArea = 0;
        jtNomeAreaR.setText(listaArea.get(indiceAtualAlteraArea).getNome());
        jtCodAreaR.setText(String.valueOf(listaArea.get(indiceAtualAlteraArea).getCod_area()));
    }//GEN-LAST:event_jbAreaRActionPerformed

    private void jbPergunta1RActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPergunta1RActionPerformed
        jScrollPaneRC.setVisible(false);
        jPanelRA.setVisible(false);
        jPanelRP.setVisible(false);
        jPanelRP1.setVisible(true);

        BDPergunta bd = new BDPergunta();
        listaPerguntaE1 = bd.buscaPerguntasEtapa1();
        this.indiceAtualAlteraPerguntaE1 = 0;
        jtCodPer1R.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getCod_pergunta()));
        jtLinkArea1R.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_area()));
        jtLinkEtapa1R.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_etapa()));
        taDescri1R.setText(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getDescricao());

    }//GEN-LAST:event_jbPergunta1RActionPerformed

    private void jtNomeCursoRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNomeCursoRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNomeCursoRActionPerformed

    private void jtCodCursoRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCodCursoRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCodCursoRActionPerformed

    private void jbRemoverCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverCursoActionPerformed
        jScrollPaneIC.setVisible(true);
        jPanelIA.setVisible(false);
        jPanelIP.setVisible(false);
        jPanelIP1.setVisible(false);

        int codigoCurso = Integer.parseInt(jtCodCursoR.getText());
        BdCursos bd = new BdCursos();

        // atualizo no BD e carrego novamente a lista de Area
        if (bd.deletaCurso(codigoCurso)) {
            JOptionPane.showMessageDialog(rootPane, "Dados removidos com sucesso",
                    "Confirmação de remoção", JOptionPane.INFORMATION_MESSAGE);
            // Carrego novamente a lista atual a partir da posição inicial
            indiceAtualAlteraCurso = 0;
            listaCursos = bd.buscaCursosGeral();
            taSobreCursoA.setLineWrap(true);
            taSisuR.setLineWrap(true);
            taCurrricularR.setLineWrap(true);
            taAreaAR.setLineWrap(true);
            taPontosPR.setLineWrap(true);
            taPontosNR.setLineWrap(true);
            taPerfilPR.setLineWrap(true);
            taMercadoR.setLineWrap(true);
            taSalarioR.setLineWrap(true);
            jtCodCursoR.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getCod_curso()));
            jtNomeCursoR.setText(listaCursos.get(indiceAtualAlteraCurso).getNome_curso());
            jtAreaCursoR.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getLink_area()));
            taSobreCursoR.append(listaCursos.get(indiceAtualAlteraCurso).getSobre_curso());
            taSisuR.append(listaCursos.get(indiceAtualAlteraCurso).getNotas_de_corte());
            taCurrricularR.append(listaCursos.get(indiceAtualAlteraCurso).getGrade_curricular());
            taAreaAR.append(listaCursos.get(indiceAtualAlteraCurso).getArea_atuacao());
            taPontosPR.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_positivos());
            taPontosNR.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_negativos());
            taPerfilPR.append(listaCursos.get(indiceAtualAlteraCurso).getPerfil_profissional());
            taMercadoR.append(listaCursos.get(indiceAtualAlteraCurso).getMercado_atual());
            taSalarioR.append(listaCursos.get(indiceAtualAlteraCurso).getSalario());

        } else {
            JOptionPane.showMessageDialog(rootPane, "Dados não gravados",
                    "Alerta de erro", JOptionPane.ERROR_MESSAGE);
            jtCodCursoR.selectAll();
            jtCodCursoR.requestFocusInWindow();
        }

    }//GEN-LAST:event_jbRemoverCursoActionPerformed

    private void jtCodAreaRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCodAreaRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCodAreaRActionPerformed

    private void jtNomeAreaRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNomeAreaRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNomeAreaRActionPerformed

    private void jbRemoverAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverAreaActionPerformed
        int codigoArea = Integer.parseInt(jtCodAreaR.getText());
        BDArea bd = new BDArea();

        // atualizo no BD e carrego novamente a lista de Area
        if (bd.deletaArea(codigoArea)) {
            JOptionPane.showMessageDialog(rootPane, "Dados removidos com sucesso",
                    "Confirmação de remoção", JOptionPane.INFORMATION_MESSAGE);
            // Carrego novamente a lista atual a partir da posição inicial
            indiceAtualAlteraArea = 0;
            listaArea = bd.buscaArea();
            jtNomeAreaR.setText(listaArea.get(indiceAtualAlteraArea).getNome());
            jtCodAreaR.setText(String.valueOf(listaArea.get(indiceAtualAlteraArea).getCod_area()));

        } else {
            JOptionPane.showMessageDialog(rootPane, "Dados não gravados",
                    "Alerta de erro", JOptionPane.ERROR_MESSAGE);
            // Volta o cursor para o campo código
            jtNomeAreaR.selectAll();
            jtNomeAreaR.requestFocusInWindow();
        }
    }//GEN-LAST:event_jbRemoverAreaActionPerformed

    private void jtLinkEtapaRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkEtapaRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkEtapaRActionPerformed

    private void jtCodPerRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCodPerRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCodPerRActionPerformed

    private void jtLinkAreaRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkAreaRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkAreaRActionPerformed

    private void jtLinkCursoRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkCursoRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkCursoRActionPerformed

    private void jbProximoPerRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbProximoPerRActionPerformed
        if (this.indiceAtualAlteraPergunta >= 0 && this.indiceAtualAlteraPergunta < this.listaPergunta.size() - 1) {
            this.indiceAtualAlteraPergunta++;

            jtCodPerR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getCod_pergunta()));
            jtLinkAreaR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_area()));
            jtLinkEtapaR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_etapa()));
            jtLinkCursoR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_curso()));
            taDescriR.setText(listaPergunta.get(indiceAtualAlteraPergunta).getDescricao());
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }
    }//GEN-LAST:event_jbProximoPerRActionPerformed

    private void jtLinkEtapa1RActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkEtapa1RActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkEtapa1RActionPerformed

    private void jtCodPer1RActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCodPer1RActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCodPer1RActionPerformed

    private void jtLinkArea1RActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtLinkArea1RActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtLinkArea1RActionPerformed

    private void jbRemoverPer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverPer1ActionPerformed
        int codigoPergunta1 = Integer.parseInt(jtCodPer1R.getText());
        BDPergunta bd = new BDPergunta();

        // atualizo no BD e carrego novamente a lista de Area
        if (bd.deletaPerguntaEtapa1(codigoPergunta1)) {
            JOptionPane.showMessageDialog(rootPane, "Dados removidos com sucesso",
                    "Confirmação de remoção", JOptionPane.INFORMATION_MESSAGE);
            // Carrego novamente a lista atual a partir da posição inicial
            indiceAtualAlteraPerguntaE1 = 0;
            listaPerguntaE1 = bd.buscaPerguntasEtapa1();
            jtCodPer1R.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getCod_pergunta()));
            jtLinkArea1R.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_area()));
            jtLinkEtapa1R.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_etapa()));
            taDescri1R.setText(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getDescricao());

        } else {
            JOptionPane.showMessageDialog(rootPane, "Dados não gravados",
                    "Alerta de erro", JOptionPane.ERROR_MESSAGE);
            // Volta o cursor para o campo código
            jtCodPer1R.selectAll();
            jtCodPer1R.requestFocusInWindow();
        }
    }//GEN-LAST:event_jbRemoverPer1ActionPerformed

    private void jbPerguntaRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPerguntaRActionPerformed
        jScrollPaneRC.setVisible(false);
        jPanelRA.setVisible(false);
        jPanelRP.setVisible(true);
        jPanelRP1.setVisible(false);

        BDPergunta bd = new BDPergunta();
        listaPergunta = bd.buscaPerguntasGeral();
        this.indiceAtualAlteraPergunta = 0;
        jtCodPerR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getCod_pergunta()));
        jtLinkAreaR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_area()));
        jtLinkEtapaR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_etapa()));
        jtLinkCursoR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_curso()));
        taDescriR.setText(listaPergunta.get(indiceAtualAlteraPergunta).getDescricao());
    }//GEN-LAST:event_jbPerguntaRActionPerformed

    private void jbProximoCAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbProximoCAActionPerformed

        if (this.indiceAtualAlteraCurso >= 0 && this.indiceAtualAlteraCurso < this.listaCursos.size() - 1) {
            this.indiceAtualAlteraCurso++;
            taSobreCursoA.setLineWrap(true);
            taSisuA.setLineWrap(true);
            taCurrricularA.setLineWrap(true);
            taAreaAA.setLineWrap(true);
            taPontosPA.setLineWrap(true);
            taPontosNA.setLineWrap(true);
            taPerfilPA.setLineWrap(true);
            taMercadoA.setLineWrap(true);
            taSalarioA.setLineWrap(true);
            jtCodCursoA.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getCod_curso()));
            jtNomeCursoA.setText(listaCursos.get(indiceAtualAlteraCurso).getNome_curso());
            jtAreaCursoA.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getLink_area()));
            taSobreCursoA.append(listaCursos.get(indiceAtualAlteraCurso).getSobre_curso());
            taSisuA.append(listaCursos.get(indiceAtualAlteraCurso).getNotas_de_corte());
            taCurrricularA.append(listaCursos.get(indiceAtualAlteraCurso).getGrade_curricular());
            taAreaAA.append(listaCursos.get(indiceAtualAlteraCurso).getArea_atuacao());
            taPontosPA.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_positivos());
            taPontosNA.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_negativos());
            taPerfilPA.append(listaCursos.get(indiceAtualAlteraCurso).getPerfil_profissional());
            taMercadoA.append(listaCursos.get(indiceAtualAlteraCurso).getMercado_atual());
            taSalarioA.append(listaCursos.get(indiceAtualAlteraCurso).getSalario());

        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }
    }//GEN-LAST:event_jbProximoCAActionPerformed

    private void jbAlteraCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlteraCActionPerformed

        int codigoCurso = Integer.parseInt(jtCodCursoA.getText());
        String nomeCurso = jtNomeCursoA.getText();
        int linkArea = Integer.parseInt(jtAreaCursoA.getText());
        String sobreCurso = taSobreCursoA.getText();
        String sisuCurso = taSisuA.getText();
        String GradeCurso = taCurrricularA.getText();
        String AreaACurso = taAreaAI.getText();
        String PontosPCurso = taPontosPA.getText();
        String PontosNCurso = taPontosNA.getText();
        String PerfilCurso = taPerfilPA.getText();
        String MercadoCurso = taMercadoA.getText();
        String SalarioCurso = taSalarioA.getText();

        Curso objC = new Curso(codigoCurso, nomeCurso, linkArea, sobreCurso, GradeCurso, GradeCurso, AreaACurso, PontosPCurso, PontosNCurso, PerfilCurso, MercadoCurso, SalarioCurso);
        BdCursos bd = new BdCursos();

        // atualizo no BD e carrego novamente a lista de Cursos
        if (bd.alteraCurso(objC)) {
            JOptionPane.showMessageDialog(rootPane, "Dados alterados com sucesso",
                    "Confirmação de alteração", JOptionPane.INFORMATION_MESSAGE);
            // Carrego novamente a lista atual
            listaCursos = bd.buscaCursosGeral();
            taSobreCursoA.setLineWrap(true);
            taSisuA.setLineWrap(true);
            taCurrricularA.setLineWrap(true);
            taAreaAA.setLineWrap(true);
            taPontosPA.setLineWrap(true);
            taPontosNA.setLineWrap(true);
            taPerfilPA.setLineWrap(true);
            taMercadoA.setLineWrap(true);
            taSalarioA.setLineWrap(true);
            jtCodCursoA.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getCod_curso()));
            jtNomeCursoA.setText(listaCursos.get(indiceAtualAlteraCurso).getNome_curso());
            jtAreaCursoA.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getLink_area())); // converter DOUBLE em String 
            taSobreCursoA.append(listaCursos.get(indiceAtualAlteraCurso).getSobre_curso());
            taSisuA.append(listaCursos.get(indiceAtualAlteraCurso).getNotas_de_corte());
            taCurrricularA.append(listaCursos.get(indiceAtualAlteraCurso).getGrade_curricular());
            taAreaAI.append(listaCursos.get(indiceAtualAlteraCurso).getArea_atuacao());
            taPontosPA.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_positivos());
            taPontosNA.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_negativos());
            taPerfilPA.append(listaCursos.get(indiceAtualAlteraCurso).getPerfil_profissional());
            taMercadoA.append(listaCursos.get(indiceAtualAlteraCurso).getMercado_atual());
            taSalarioA.append(listaCursos.get(indiceAtualAlteraCurso).getSalario());

        } else {
            JOptionPane.showMessageDialog(rootPane, "Dados não gravados",
                    "Alerta de erro", JOptionPane.ERROR_MESSAGE);
            // Volta o cursor para o campo código
            jtCodCursoA.selectAll();
            jtCodCursoA.requestFocusInWindow();
        }
    }//GEN-LAST:event_jbAlteraCActionPerformed

    private void jbAnteriorAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnteriorAActionPerformed
        if (this.indiceAtualAlteraArea > 0) {
            this.indiceAtualAlteraArea--;
            jtNomeAreaA.setText(listaArea.get(indiceAtualAlteraArea).getNome());
            jtCodAreaA.setText(String.valueOf(listaArea.get(indiceAtualAlteraArea).getCod_area()));
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }
    }//GEN-LAST:event_jbAnteriorAActionPerformed

    private void jbAlteraAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlteraAreaActionPerformed
        String nomeArea = jtNomeAreaA.getText();
        int codigoArea = Integer.parseInt(jtCodAreaA.getText());

        Area objA = new Area(nomeArea, codigoArea);
        BDArea bd = new BDArea();

        // atualizo no BD e carrego novamente a lista de Cursos
        if (bd.alteraArea(objA)) {
            JOptionPane.showMessageDialog(rootPane, "Dados alterados com sucesso",
                    "Confirmação de alteração", JOptionPane.INFORMATION_MESSAGE);
            // Carrego novamente a lista atual
            listaArea = bd.buscaArea();
            jtNomeAreaA.setText(listaArea.get(indiceAtualAlteraArea).getNome());
            jtCodAreaA.setText(String.valueOf(listaArea.get(indiceAtualAlteraArea).getCod_area()));

        } else {
            JOptionPane.showMessageDialog(rootPane, "Dados não gravados",
                    "Alerta de erro", JOptionPane.ERROR_MESSAGE);
            // Volta o cursor para o campo código
            jtNomeAreaA.selectAll();
            jtNomeAreaA.requestFocusInWindow();
        }
    }//GEN-LAST:event_jbAlteraAreaActionPerformed

    private void jbProximoPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbProximoPActionPerformed
        if (this.indiceAtualAlteraPergunta >= 0 && this.indiceAtualAlteraPergunta < this.listaPergunta.size() - 1) {
            this.indiceAtualAlteraPergunta++;
            jtCodPerA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getCod_pergunta()));
            jtLinkAreaA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_area()));
            jtLinkEtapaA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_etapa()));
            jtLinkCursoA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_curso()));
            taDescriA.setText(listaPergunta.get(indiceAtualAlteraPergunta).getDescricao());
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }
    }//GEN-LAST:event_jbProximoPActionPerformed

    private void jbAlterarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarPActionPerformed
        String descricao = "";
        int cod_pergunta, link_area, link_etapa, link_curso;

        cod_pergunta = Integer.parseInt(jtCodPerA.getText());
        link_area = Integer.parseInt(jtLinkAreaA.getText());
        link_etapa = Integer.parseInt(jtLinkEtapaA.getText());
        link_curso = Integer.parseInt(jtLinkCursoA.getText());
        descricao = taDescriA.getText();

        Pergunta objPer = new Pergunta(descricao, cod_pergunta, link_area, link_etapa, link_curso);
        BDPergunta objBD = new BDPergunta();

        // atualizo no BD e carrego novamente a lista de Pergunta
        if (objBD.alteraPergunta(objPer)) {
            JOptionPane.showMessageDialog(rootPane, "Dados alterados com sucesso",
                    "Confirmação de alteração", JOptionPane.INFORMATION_MESSAGE);
            // Carrego novamente a lista atual
            listaPergunta = objBD.buscaPerguntasGeral();
            jtCodPerA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getCod_pergunta()));
            jtLinkAreaA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_area()));
            jtLinkEtapaA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_etapa()));
            jtLinkCursoA.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_curso()));
            taDescriA.setText(listaPergunta.get(indiceAtualAlteraPergunta).getDescricao());

        } else {
            JOptionPane.showMessageDialog(rootPane, "Dados não gravados",
                    "Alerta de erro", JOptionPane.ERROR_MESSAGE);
            // Volta o cursor para o campo código
            jtCodPerA.selectAll();
            jtCodPerA.requestFocusInWindow();
        }
    }//GEN-LAST:event_jbAlterarPActionPerformed

    private void jbAnteriorP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnteriorP1ActionPerformed
        if (this.indiceAtualAlteraPerguntaE1 > 0) {
            this.indiceAtualAlteraPerguntaE1--;
            jtCodPer1A.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getCod_pergunta()));
            jtLinkArea1A.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_area()));
            jtLinkEtapa1A.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_etapa()));
            taDescri1A.setText(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getDescricao());
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }
    }//GEN-LAST:event_jbAnteriorP1ActionPerformed

    private void jbProximoP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbProximoP1ActionPerformed
        if (this.indiceAtualAlteraPerguntaE1 >= 0 && this.indiceAtualAlteraPerguntaE1 < this.listaPerguntaE1.size() - 1) {
            this.indiceAtualAlteraPerguntaE1++;
            jtCodPer1A.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getCod_pergunta()));
            jtLinkArea1A.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_area()));
            jtLinkEtapa1A.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_etapa()));
            taDescri1A.setText(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getDescricao());
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }
    }//GEN-LAST:event_jbProximoP1ActionPerformed

    private void jbAnteriorRAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnteriorRAActionPerformed
        if (this.indiceAtualAlteraArea > 0) {
            this.indiceAtualAlteraArea--;
            jtNomeAreaR.setText(listaArea.get(indiceAtualAlteraArea).getNome());
            jtCodAreaR.setText(String.valueOf(listaArea.get(indiceAtualAlteraArea).getCod_area()));
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }
    }//GEN-LAST:event_jbAnteriorRAActionPerformed

    private void jbProximoRAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbProximoRAActionPerformed
        if (this.indiceAtualAlteraArea >= 0 && this.indiceAtualAlteraArea < this.listaArea.size() - 1) {
            this.indiceAtualAlteraArea++;
            jtNomeAreaR.setText(listaArea.get(indiceAtualAlteraArea).getNome());
            jtCodAreaR.setText(String.valueOf(listaArea.get(indiceAtualAlteraArea).getCod_area()));
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }
    }//GEN-LAST:event_jbProximoRAActionPerformed

    private void jbAnteriorRCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnteriorRCActionPerformed
        if (this.indiceAtualAlteraCurso > 0) {
            this.indiceAtualAlteraCurso--;
            taSobreCursoA.setLineWrap(true);
            taSisuR.setLineWrap(true);
            taCurrricularR.setLineWrap(true);
            taAreaAR.setLineWrap(true);
            taPontosPR.setLineWrap(true);
            taPontosNR.setLineWrap(true);
            taPerfilPR.setLineWrap(true);
            taMercadoR.setLineWrap(true);
            taSalarioR.setLineWrap(true);
            jtCodCursoR.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getCod_curso()));
            jtNomeCursoR.setText(listaCursos.get(indiceAtualAlteraCurso).getNome_curso());
            jtAreaCursoR.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getLink_area()));
            taSobreCursoR.append(listaCursos.get(indiceAtualAlteraCurso).getSobre_curso());
            taSisuR.append(listaCursos.get(indiceAtualAlteraCurso).getNotas_de_corte());
            taCurrricularR.append(listaCursos.get(indiceAtualAlteraCurso).getGrade_curricular());
            taAreaAR.append(listaCursos.get(indiceAtualAlteraCurso).getArea_atuacao());
            taPontosPR.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_positivos());
            taPontosNR.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_negativos());
            taPerfilPR.append(listaCursos.get(indiceAtualAlteraCurso).getPerfil_profissional());
            taMercadoR.append(listaCursos.get(indiceAtualAlteraCurso).getMercado_atual());
            taSalarioR.append(listaCursos.get(indiceAtualAlteraCurso).getSalario());
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jbAnteriorRCActionPerformed

    private void jbProximoRCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbProximoRCActionPerformed
        if (this.indiceAtualAlteraCurso >= 0 && this.indiceAtualAlteraCurso < this.listaCursos.size() - 1) {
            this.indiceAtualAlteraCurso++;
            taSobreCursoA.setLineWrap(true);
            taSisuR.setLineWrap(true);
            taCurrricularR.setLineWrap(true);
            taAreaAR.setLineWrap(true);
            taPontosPR.setLineWrap(true);
            taPontosNR.setLineWrap(true);
            taPerfilPR.setLineWrap(true);
            taMercadoR.setLineWrap(true);
            taSalarioR.setLineWrap(true);
            jtCodCursoR.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getCod_curso()));
            jtNomeCursoR.setText(listaCursos.get(indiceAtualAlteraCurso).getNome_curso());
            jtAreaCursoR.setText(String.valueOf(listaCursos.get(indiceAtualAlteraCurso).getLink_area()));
            taSobreCursoR.append(listaCursos.get(indiceAtualAlteraCurso).getSobre_curso());
            taSisuR.append(listaCursos.get(indiceAtualAlteraCurso).getNotas_de_corte());
            taCurrricularR.append(listaCursos.get(indiceAtualAlteraCurso).getGrade_curricular());
            taAreaAR.append(listaCursos.get(indiceAtualAlteraCurso).getArea_atuacao());
            taPontosPR.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_positivos());
            taPontosNR.append(listaCursos.get(indiceAtualAlteraCurso).getPontos_negativos());
            taPerfilPR.append(listaCursos.get(indiceAtualAlteraCurso).getPerfil_profissional());
            taMercadoR.append(listaCursos.get(indiceAtualAlteraCurso).getMercado_atual());
            taSalarioR.append(listaCursos.get(indiceAtualAlteraCurso).getSalario());

        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }
    }//GEN-LAST:event_jbProximoRCActionPerformed

    private void jbRemoverPerRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverPerRActionPerformed
        int codigoPergunta = Integer.parseInt(jtCodPerR.getText());
        BDPergunta bd = new BDPergunta();

        // atualizo no BD e carrego novamente a lista de Area
        if (bd.deletaPergunta(codigoPergunta)) {
            JOptionPane.showMessageDialog(rootPane, "Dados removidos com sucesso",
                    "Confirmação de remoção", JOptionPane.INFORMATION_MESSAGE);
            // Carrego novamente a lista atual a partir da posição inicial
            indiceAtualAlteraPergunta = 0;
            listaPergunta = bd.buscaPerguntasGeral();
            jtCodPerR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getCod_pergunta()));
            jtLinkAreaR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_area()));
            jtLinkEtapaR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_etapa()));
            jtLinkCursoR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_curso()));
            taDescriR.setText(listaPergunta.get(indiceAtualAlteraPergunta).getDescricao());

        } else {
            JOptionPane.showMessageDialog(rootPane, "Dados não gravados",
                    "Alerta de erro", JOptionPane.ERROR_MESSAGE);
            // Volta o cursor para o campo código
            jtCodPerR.selectAll();
            jtCodPerR.requestFocusInWindow();
        }
    }//GEN-LAST:event_jbRemoverPerRActionPerformed

    private void jbAnteriorPerRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnteriorPerRActionPerformed
        if (this.indiceAtualAlteraPergunta > 0) {
            this.indiceAtualAlteraPergunta--;

            jtCodPerR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getCod_pergunta()));
            jtLinkAreaR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_area()));
            jtLinkEtapaR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_etapa()));
            jtLinkCursoR.setText(String.valueOf(listaPergunta.get(indiceAtualAlteraPergunta).getLink_curso()));
            taDescriR.setText(listaPergunta.get(indiceAtualAlteraPergunta).getDescricao());
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }          // TODO add your handling code here:
    }//GEN-LAST:event_jbAnteriorPerRActionPerformed

    private void jbAnteriorPer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnteriorPer1ActionPerformed
        if (this.indiceAtualAlteraPerguntaE1 > 0) {
            this.indiceAtualAlteraPerguntaE1--;

            jtCodPer1R.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getCod_pergunta()));
            jtLinkArea1R.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_area()));
            jtLinkEtapa1R.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_etapa()));
            taDescri1R.setText(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getDescricao());
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }
    }//GEN-LAST:event_jbAnteriorPer1ActionPerformed

    private void jbProximoPer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbProximoPer1ActionPerformed
        if (this.indiceAtualAlteraPerguntaE1 >= 0 && this.indiceAtualAlteraPerguntaE1 < this.listaPerguntaE1.size() - 1) {
            this.indiceAtualAlteraPerguntaE1++;
            jtCodPer1R.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getCod_pergunta()));
            jtLinkArea1R.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_area()));
            jtLinkEtapa1R.setText(String.valueOf(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getLink_etapa()));
            taDescri1R.setText(listaPerguntaE1.get(indiceAtualAlteraPerguntaE1).getDescricao());
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Não é possível navegar nesta direção!");
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jbProximoPer1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PainelAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PainelAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PainelAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PainelAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PainelAdministrador().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel imgCad4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanelAA;
    private javax.swing.JPanel jPanelAP;
    private javax.swing.JPanel jPanelAP1;
    private javax.swing.JPanel jPanelIA;
    private javax.swing.JPanel jPanelIP;
    private javax.swing.JPanel jPanelIP1;
    private javax.swing.JPanel jPanelRA;
    private javax.swing.JPanel jPanelRP;
    private javax.swing.JPanel jPanelRP1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JScrollPane jScrollPane29;
    private javax.swing.JScrollPane jScrollPane30;
    private javax.swing.JScrollPane jScrollPane31;
    private javax.swing.JScrollPane jScrollPane32;
    private javax.swing.JScrollPane jScrollPane33;
    private javax.swing.JScrollPane jScrollPane34;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JScrollPane jScrollPaneAC;
    private javax.swing.JScrollPane jScrollPaneIC;
    private javax.swing.JScrollPane jScrollPaneRC;
    private javax.swing.JButton jbAlteraArea;
    private javax.swing.JButton jbAlteraC;
    private javax.swing.JButton jbAlteraP1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbAlterarP;
    private javax.swing.JButton jbAnteriorA;
    private javax.swing.JButton jbAnteriorCA;
    private javax.swing.JButton jbAnteriorP;
    private javax.swing.JButton jbAnteriorP1;
    private javax.swing.JButton jbAnteriorPer1;
    private javax.swing.JButton jbAnteriorPerR;
    private javax.swing.JButton jbAnteriorRA;
    private javax.swing.JButton jbAnteriorRC;
    private javax.swing.JButton jbAreaA;
    private javax.swing.JButton jbAreaI;
    private javax.swing.JButton jbAreaR;
    private javax.swing.JButton jbCad;
    private javax.swing.JButton jbCadastrar4;
    private javax.swing.JButton jbCancelar4;
    private javax.swing.JButton jbCursoA;
    private javax.swing.JButton jbCursoI;
    private javax.swing.JButton jbCursoR;
    private javax.swing.JButton jbInsereArea;
    private javax.swing.JButton jbInsereCurso;
    private javax.swing.JButton jbInserePer;
    private javax.swing.JButton jbInserePer1;
    private javax.swing.JButton jbInserePergunta;
    private javax.swing.JButton jbInserir;
    private javax.swing.JButton jbPergunta1A;
    private javax.swing.JButton jbPergunta1I;
    private javax.swing.JButton jbPergunta1R;
    private javax.swing.JButton jbPerguntaA;
    private javax.swing.JButton jbPerguntaI;
    private javax.swing.JButton jbPerguntaR;
    private javax.swing.JButton jbProximoA;
    private javax.swing.JButton jbProximoCA;
    private javax.swing.JButton jbProximoP;
    private javax.swing.JButton jbProximoP1;
    private javax.swing.JButton jbProximoPer1;
    private javax.swing.JButton jbProximoPerR;
    private javax.swing.JButton jbProximoRA;
    private javax.swing.JButton jbProximoRC;
    private javax.swing.JButton jbRemover;
    private javax.swing.JButton jbRemoverArea;
    private javax.swing.JButton jbRemoverCurso;
    private javax.swing.JButton jbRemoverPer1;
    private javax.swing.JButton jbRemoverPerR;
    private javax.swing.JButton jbSair;
    private javax.swing.JLabel jlArea;
    private javax.swing.JLabel jlArea1;
    private javax.swing.JLabel jlArea2;
    private javax.swing.JLabel jlArea3;
    private javax.swing.JLabel jlArea4;
    private javax.swing.JLabel jlArea5;
    private javax.swing.JLabel jlAreaA;
    private javax.swing.JLabel jlAreaA1;
    private javax.swing.JLabel jlAreaA2;
    private javax.swing.JLabel jlCad4;
    private javax.swing.JLabel jlEnsino2;
    private javax.swing.JLabel jlEnsino3;
    private javax.swing.JLabel jlEnsino4;
    private javax.swing.JLabel jlGrade;
    private javax.swing.JLabel jlGrade1;
    private javax.swing.JLabel jlGrade2;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlNome1;
    private javax.swing.JLabel jlNome10;
    private javax.swing.JLabel jlNome11;
    private javax.swing.JLabel jlNome12;
    private javax.swing.JLabel jlNome13;
    private javax.swing.JLabel jlNome14;
    private javax.swing.JLabel jlNome15;
    private javax.swing.JLabel jlNome16;
    private javax.swing.JLabel jlNome17;
    private javax.swing.JLabel jlNome18;
    private javax.swing.JLabel jlNome19;
    private javax.swing.JLabel jlNome20;
    private javax.swing.JLabel jlNome21;
    private javax.swing.JLabel jlNome22;
    private javax.swing.JLabel jlNome23;
    private javax.swing.JLabel jlNome24;
    private javax.swing.JLabel jlNome25;
    private javax.swing.JLabel jlNome26;
    private javax.swing.JLabel jlNome27;
    private javax.swing.JLabel jlNome28;
    private javax.swing.JLabel jlNome29;
    private javax.swing.JLabel jlNome3;
    private javax.swing.JLabel jlNome30;
    private javax.swing.JLabel jlNome31;
    private javax.swing.JLabel jlNome32;
    private javax.swing.JLabel jlNome33;
    private javax.swing.JLabel jlNome34;
    private javax.swing.JLabel jlNome35;
    private javax.swing.JLabel jlNome36;
    private javax.swing.JLabel jlNome37;
    private javax.swing.JLabel jlNome38;
    private javax.swing.JLabel jlNome4;
    private javax.swing.JLabel jlNome5;
    private javax.swing.JLabel jlNome6;
    private javax.swing.JLabel jlNome7;
    private javax.swing.JLabel jlNome8;
    private javax.swing.JLabel jlNome9;
    private javax.swing.JLabel jlSisu10;
    private javax.swing.JLabel jlSisu2;
    private javax.swing.JLabel jlSisu3;
    private javax.swing.JLabel jlSisu4;
    private javax.swing.JLabel jlSisu5;
    private javax.swing.JLabel jlSisu6;
    private javax.swing.JLabel jlSisu7;
    private javax.swing.JLabel jlSisu8;
    private javax.swing.JLabel jlSisu9;
    private javax.swing.JLabel jlSobreCurso10;
    private javax.swing.JLabel jlSobreCurso11;
    private javax.swing.JLabel jlSobreCurso12;
    private javax.swing.JLabel jlSobreCurso13;
    private javax.swing.JLabel jlSobreCurso14;
    private javax.swing.JLabel jlSobreCurso15;
    private javax.swing.JLabel jlSobreCurso4;
    private javax.swing.JLabel jlSobreCurso5;
    private javax.swing.JLabel jlSobreCurso6;
    private javax.swing.JLabel jlSobreCurso7;
    private javax.swing.JLabel jlSobreCurso8;
    private javax.swing.JLabel jlSobreCurso9;
    private javax.swing.JLabel jlT3;
    private javax.swing.JLabel jlT4;
    private javax.swing.JLabel jlT5;
    private javax.swing.JPasswordField jpSenha4;
    private javax.swing.JTextField jtAreaCursoA;
    private javax.swing.JTextField jtAreaCursoI;
    private javax.swing.JTextField jtAreaCursoR;
    private javax.swing.JTextField jtCodAreaA;
    private javax.swing.JTextField jtCodAreaI;
    private javax.swing.JTextField jtCodAreaR;
    private javax.swing.JTextField jtCodCursoA;
    private javax.swing.JTextField jtCodCursoI;
    private javax.swing.JTextField jtCodCursoR;
    private javax.swing.JTextField jtCodPer1A;
    private javax.swing.JTextField jtCodPer1I;
    private javax.swing.JTextField jtCodPer1R;
    private javax.swing.JTextField jtCodPerA;
    private javax.swing.JTextField jtCodPerI;
    private javax.swing.JTextField jtCodPerR;
    private javax.swing.JTextField jtLinkArea1A;
    private javax.swing.JTextField jtLinkArea1I;
    private javax.swing.JTextField jtLinkArea1R;
    private javax.swing.JTextField jtLinkAreaA;
    private javax.swing.JTextField jtLinkAreaI;
    private javax.swing.JTextField jtLinkAreaR;
    private javax.swing.JTextField jtLinkCursoA;
    private javax.swing.JTextField jtLinkCursoI;
    private javax.swing.JTextField jtLinkCursoR;
    private javax.swing.JTextField jtLinkEtapa1A;
    private javax.swing.JTextField jtLinkEtapa1I;
    private javax.swing.JTextField jtLinkEtapa1R;
    private javax.swing.JTextField jtLinkEtapaA;
    private javax.swing.JTextField jtLinkEtapaI;
    private javax.swing.JTextField jtLinkEtapaR;
    private javax.swing.JTextField jtNome4;
    private javax.swing.JTextField jtNomeAreaA;
    private javax.swing.JTextField jtNomeAreaI;
    private javax.swing.JTextField jtNomeAreaR;
    private javax.swing.JTextField jtNomeCursoA;
    private javax.swing.JTextField jtNomeCursoI;
    private javax.swing.JTextField jtNomeCursoR;
    private javax.swing.JPanel p1;
    private javax.swing.JPanel p2;
    private javax.swing.JPanel p3;
    private javax.swing.JPanel p4;
    private javax.swing.JPanel p5;
    private javax.swing.JPanel painel4;
    private javax.swing.JTextArea taAreaAA;
    private javax.swing.JTextArea taAreaAI;
    private javax.swing.JTextArea taAreaAR;
    private javax.swing.JTextArea taCurrricularA;
    private javax.swing.JTextArea taCurrricularI;
    private javax.swing.JTextArea taCurrricularR;
    private javax.swing.JTextArea taDescri1A;
    private javax.swing.JTextArea taDescri1I;
    private javax.swing.JTextArea taDescri1R;
    private javax.swing.JTextArea taDescriA;
    private javax.swing.JTextArea taDescriI;
    private javax.swing.JTextArea taDescriR;
    private javax.swing.JScrollPane taDescricao;
    private javax.swing.JScrollPane taDescricao1;
    private javax.swing.JScrollPane taDescricao2;
    private javax.swing.JScrollPane taDescricao3;
    private javax.swing.JScrollPane taDescricao4;
    private javax.swing.JScrollPane taDescricao5;
    private javax.swing.JTextArea taMercadoA;
    private javax.swing.JTextArea taMercadoI;
    private javax.swing.JTextArea taMercadoR;
    private javax.swing.JTextArea taPerfilPA;
    private javax.swing.JTextArea taPerfilPI;
    private javax.swing.JTextArea taPerfilPR;
    private javax.swing.JTextArea taPontosNA;
    private javax.swing.JTextArea taPontosNI;
    private javax.swing.JTextArea taPontosNR;
    private javax.swing.JTextArea taPontosPA;
    private javax.swing.JTextArea taPontosPI;
    private javax.swing.JTextArea taPontosPR;
    private javax.swing.JTextArea taSalarioA;
    private javax.swing.JTextArea taSalarioI;
    private javax.swing.JTextArea taSalarioR;
    private javax.swing.JTextArea taSisuA;
    private javax.swing.JTextArea taSisuI;
    private javax.swing.JTextArea taSisuR;
    private javax.swing.JTextArea taSobreCursoA;
    private javax.swing.JTextArea taSobreCursoI;
    private javax.swing.JTextArea taSobreCursoR;
    // End of variables declaration//GEN-END:variables
}
